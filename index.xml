<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codetab</title>
    <link>https://www.codetab.org/</link>
    <description>Recent content on Codetab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Jan 2019 12:11:22 +0530</lastBuildDate>
    
	<atom:link href="https://www.codetab.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Borg Backup</title>
      <link>https://www.codetab.org/post/borg-backup/</link>
      <pubDate>Tue, 27 Aug 2019 10:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/borg-backup/</guid>
      <description>For long, I was looking for an ideal backup setup. Expectations were minimal;periodically backup set of folders from the main disk to secondary disk, compressing the files to save disk space, retaining the earlier sets and easy to learn, deploy and maintain. I tried and dropped many backup solutions because of cumbersome setup and steep learning curve.
Finally, I chose Borg Backup for its sophistication and ease of use; thereupon, using it for more than a year now.</description>
    </item>
    
    <item>
      <title>Java Generics - CodeTab</title>
      <link>https://www.codetab.org/tutorial/java-generics/introduction/</link>
      <pubDate>Tue, 23 Jul 2019 13:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/java-generics/introduction/</guid>
      <description>Java Generics There are enough tutorials on Java Generics. However, many are either too easy or too difficult to get a clear view of the subject. In this series, we focus on confusing aspects and try to explain them with multiple examples.
If you are new to generics, we suggest you to go through Java Tutorial Trail - Generics as we don&amp;rsquo;t cover the basics. Even after going through it if certain aspects are not clear, then try this tutorial.</description>
    </item>
    
    <item>
      <title>Downloads - CodeTab</title>
      <link>https://www.codetab.org/downloads/</link>
      <pubDate>Wed, 13 Feb 2019 23:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/downloads/</guid>
      <description>Downloads Code samples and projects covered in CodeTab tutorials are available in GitHub</description>
    </item>
    
    <item>
      <title>Apache Maven Guide</title>
      <link>https://www.codetab.org/tutorials/apache-maven/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/tutorials/apache-maven/</guid>
      <description>Dive into project management with Apache Maven</description>
    </item>
    
    <item>
      <title>Scoopi</title>
      <link>https://www.codetab.org/projects/scoopi-web-scraper/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/projects/scoopi-web-scraper/</guid>
      <description>Scrape web without any coding</description>
    </item>
    
    <item>
      <title>Introduction - Scoopi Web Scraper V094 - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/introduction/</link>
      <pubDate>Sat, 12 Jan 2019 01:53:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/introduction/</guid>
      <description>Scoopi Web Scraper Scoopi web scraper extracts and transform data from HTML pages. JSoup and HtmlUnit makes it quite easy to scrape web pages in Java, but the things get complicated when data is from large number of pages. Some of the challenges while extracting large set of data from unstructured sources such as HTML pages are:
 Data being unstructured, may requires many queries to scrape them Data may not be in desired format and to make them usable, needs filter and transform Connection may drop during a run and all the work is lost When data is from thousands of pages, performance does matter Need Java or Python proficiency to use scraper libraries  Scraping libraries do well in scraping data from limited set of pages but they are not meant to handle thousands of pages.</description>
    </item>
    
    <item>
      <title>Introduction - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/introduction/</link>
      <pubDate>Fri, 11 Jan 2019 23:03:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/introduction/</guid>
      <description>Scoopi Web Scraper Scoopi web scraper extracts and transform data from HTML pages. JSoup and HtmlUnit makes it quite easy to scrape web pages in Java, but the things get complicated when data is from large number of pages. Some of the challenges while extracting large set of data from unstructured sources such as HTML pages are:
 Data being unstructured, may requires many queries to scrape them Data may not be in desired format and to make them usable, needs filter and transform Connection may drop during a run and all the work is lost When data is from thousands of pages, performance does matter Need Java or Python proficiency to use scraper libraries  Scraping libraries do well in scraping data from limited set of pages but they are not meant to handle thousands of pages.</description>
    </item>
    
    <item>
      <title>Installation - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/installation-quick-start/</link>
      <pubDate>Fri, 11 Jan 2019 22:25:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/installation-quick-start/</guid>
      <description>Scoopi Installation and Quick Start The easiest way to get start with Scoopi is to pull the image from DockerHub and run it straight away. Scoopi docker image comes pre-configured with JRE 8 and Maria DB. In case, you are not using Docker then download the release from GitHub. We explain both the options here.
Install Scoopi from Docker Image Scoopi releases are available as docker image from DockerHub. To run the image you need Docker installed in the system and additionally, to run it with MariaDB database, you also need Docker Compose.</description>
    </item>
    
    <item>
      <title>Installation - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/gotz-installation-quick-start/</link>
      <pubDate>Fri, 11 Jan 2019 19:02:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/gotz-installation-quick-start/</guid>
      <description>If you use Docker to run applications, then the easiest way install Gotz is to pull its image from DockerHub and run it straight away with an added convince that it comes MariaDB preconfigured. In case, you are not using Docker then you can also download its release from GitHub. We explain both the options here.
Install Gotz from Docker Image Gotz releases are available as docker image from DockerHub. To run Gotz container, we needDocker installed in the system and additionally, to run it with database, we also need Docker Compose.</description>
    </item>
    
    <item>
      <title>Introduction - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/introduction/</link>
      <pubDate>Fri, 11 Jan 2019 18:43:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/introduction/</guid>
      <description>&amp;nbsp;   (adsbygoogle = window.adsbygoogle || []).push({});  &amp;nbsp; CodeTab Gotz ETL Gotz ETL is a tool to extract data from HTML pages. In Java, it&amp;rsquo;s easy to scrape web pages with libraries such as JSoup and HtmlUnit, but the task become daunting when we try to scrape data from huge set of pages.
Some of the challenges while extracting large set of data from unstructured sources such as HTML pages are:</description>
    </item>
    
    <item>
      <title>Introduction - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/introduction/</link>
      <pubDate>Fri, 11 Jan 2019 16:03:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/introduction/</guid>
      <description>Introduction Best resources about Apache Maven are from Sonatype Maven Reference Book and Maven By Example. However, the exhaustive details in these books may confuse and overwhelm the beginners.
This tutorial series tries to explain the Apache Maven concepts and workflow in easy steps. Focus is to explain Apache Maven with simple examples and easy explanations for benefit of beginners and intermediate users.
As objective of the tutorial is to explain Apache Maven concepts and its working, the Java examples we use in the tutorial are extremely simple and small, so that focus is more on Maven rather than Java projects.</description>
    </item>
    
    <item>
      <title>Installation - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/install-apache-maven/</link>
      <pubDate>Fri, 11 Jan 2019 15:08:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/install-apache-maven/</guid>
      <description>Install Apache Maven Download latest release of the software from Apache Maven Download Page.
Installing on Linux and Mac Extract the downloaded zip file to some folder. For the sake of explanation, we use /opt/apache-maven directory as the maven home.
$ mkdir /opt/apache-maven $ cd /opt/apache-maven $ unzip apache-maven-3.3.1-bin.zip $ ln -s apache-maven-3.3.1 maven Next, set and export M2_HOME and PATH environment variables.
export M2_HOME=/opt/apache-maven/maven export PATH=$M2_HOME/bin:${PATH} To persist these variables across restarts, add the exports to $HOME/.</description>
    </item>
    
    <item>
      <title>Introduction - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/introduction/</link>
      <pubDate>Fri, 11 Jan 2019 07:12:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/introduction/</guid>
      <description>&amp;nbsp;   (adsbygoogle = window.adsbygoogle || []).push({});  &amp;nbsp; CodeTab WordPress Plugin Development Tutorial Some time back, we released Share on Social, a social media sharing plugin. In this WordPress Plugin Development Tutorial, we go through the construction of the plugin and also other essentials to develop a robust WordPress plugin, so as to share the experience with aspiring WordPress Plugin developers.
There are enough blogs about WordPress Plugin Development.</description>
    </item>
    
    <item>
      <title>Introduction - Share on Social WordPress Plugin - CodeTab</title>
      <link>https://www.codetab.org/tutorial/share-on-social-wordpress-plugin/share-on-social-wordpress-plugin/</link>
      <pubDate>Fri, 11 Jan 2019 06:11:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/share-on-social-wordpress-plugin/share-on-social-wordpress-plugin/</guid>
      <description>Share on Social WordPress Plugin allows you to lock a part of content on a WordPress Post or Page until user shares your blogs in social media. Plugin posts the shared link - as interactive posts - to users&amp;rsquo; wall and helps you to drive new visitors and increase engagement.</description>
    </item>
    
    <item>
      <title>Introduction - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/introduction/</link>
      <pubDate>Fri, 11 Jan 2019 00:18:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/introduction/</guid>
      <description>CodeTab WordPress Tutorial CodeTab WordPress Tutorial is a complete, step-by-step, guide to assist beginners as well as intermediate users to install, customize and maintain a High Performance WordPress Site on RedHat OpenShift Cloud Platform.
WordPress Tutorial quickly introduces the beginners to WordPress basics and then moves on to cover some of the Must Have Plugins and essential tools required to maintain the WordPress site. The later chapters on importing the static HTML site or pages, use of Child Themes, Dynamic Style management, structuring the site for Search Engine Optimization, WordPress Backup and Restore, WordPress clone for staging site etc.</description>
    </item>
    
    <item>
      <title>Privacy Policy - CodeTab</title>
      <link>https://www.codetab.org/privacy-policy/</link>
      <pubDate>Thu, 10 Jan 2019 23:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/privacy-policy/</guid>
      <description>Privacy Policy for www.codetab.org If you require any more information or have any questions about our privacy policy, please feel free to contact us by email at maithilish@gmail.com.
At http://www.codetab.org, the privacy of our visitors is of extreme importance to us. This privacy policy document outlines the types of personal information is received and collected by http://www.codetab.org and how it is used.
Log Files
Like many other Web sites, http://www.codetab.org makes use of log files.</description>
    </item>
    
    <item>
      <title>Introduction - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/introduction/</link>
      <pubDate>Thu, 10 Jan 2019 23:15:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/introduction/</guid>
      <description>Introduction Apache Ivy Tutorial is a step by step beginners guide which covers Apache Ivy and IvyDE installation, basic usage, essential Ivy Ant Tasks, building private and enterprise repositories, installing and publishing modules to repositories and Apache Ivy in Eclipse projects with IvyDE Plugin for Eclipse. Basic objective of Apache Ivy Tutorial is to explain Ivy concepts and tasks through easy to follow examples and assist beginners as well as intermediate users to kick start their projects with automated dependency management.</description>
    </item>
    
    <item>
      <title>Introduction - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/introduction/</link>
      <pubDate>Thu, 10 Jan 2019 14:46:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/introduction/</guid>
      <description>Introduction GWT Tutorial explains the design of a complete application using Google Web Toolkit (GWT) ™ 2.x. Written in a style keeping both beginners, as well as, intermediate developers in mind, book covers client side user interface design, server side communication, effective persistence strategies and hosting the application on Google App Engine. Fins is an GWT app developed in this book, displays financial performance of a company in a clean and easy to use user interface.</description>
    </item>
    
    <item>
      <title>Tutorials</title>
      <link>https://www.codetab.org/home/tutorials/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/home/tutorials/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Automate Borg Backup</title>
      <link>https://www.codetab.org/post/borg-backup-automate/</link>
      <pubDate>Tue, 27 Aug 2019 11:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/borg-backup-automate/</guid>
      <description>The previous post, Borg Backup, explained installation and basics of Borg, and this post introduces Pybs, a simple python script to automate backups in Linux systems. To automate the backups, Pybs uses Python, YAML, Borg and Systemd. For non-linux platforms use some other task scheduler in place of Systemd.
Installation Download Pybs from Github and extract it in your home dir.
Pybs, by default, uses Borg repository at $HOME/backup/borgrepo located in user home directory, and for sake of explanation, we stick with it.</description>
    </item>
    
    <item>
      <title>Java Generics Subtype - CodeTab</title>
      <link>https://www.codetab.org/tutorial/java-generics/subtype/</link>
      <pubDate>Tue, 23 Jul 2019 13:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/java-generics/subtype/</guid>
      <description>Generic Inheritance and Subtypes 
To explain Generic inheritance, subtypes and wildcards, we use following class hierarchy:
 The Food, Snack and Cookie classes are as below. Fruit and Apple classes are similar.
public class Food { public void foodMethod(){ } } public class Snack extends Food { public void snackMethod(){ } } public class Cookie extends Snack { public void cookieMethod(){ } } We use Java List interface in examples with a focus on its add() and get() methods.</description>
    </item>
    
    <item>
      <title>Scoopi Web Scraper</title>
      <link>https://www.codetab.org/tutorials/scoopi-web-scraper/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/tutorials/scoopi-web-scraper/</guid>
      <description>Extract tons of data from web without any coding</description>
    </item>
    
    <item>
      <title>Share on Social</title>
      <link>https://www.codetab.org/projects/share-on-social/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/projects/share-on-social/</guid>
      <description>WordPress plugin to share on FB wall</description>
    </item>
    
    <item>
      <title>Installation - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/installation-quick-start-v094/</link>
      <pubDate>Sat, 12 Jan 2019 05:26:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/installation-quick-start-v094/</guid>
      <description>Scoopi Installation and Quick Start The easiest way to use Scoopi is to pull the docker image from DockerHub and run it straight away which comes with pre-configured MariaDB. In case, you are not using Docker then download the release from GitHub. We explain both the options here.
Install Scoopi from Docker Image Scoopi releases are available as docker image from DockerHub. To run the image you need Docker installed in the system and additionally, to run it with database, you also need Docker Compose.</description>
    </item>
    
    <item>
      <title>Definition files - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/definition-file/</link>
      <pubDate>Fri, 11 Jan 2019 22:37:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/definition-file/</guid>
      <description>Defs, Locators and Tasks Scoopi uses YML definition files to extract data from HTML pages. To learn the YML elements used by the definition files, Scoopi distribution comes with a set of examples which are under def/examples folder.
Scoopi Definition Files Scoopi creates the data model based on YML definition files. We can specify the definition file using scoopi.defs.dir configuration property, which is normally set in scoopi.properties file located in conf folder.</description>
    </item>
    
    <item>
      <title>Bean Locator - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/bean-locator/</link>
      <pubDate>Fri, 11 Jan 2019 18:51:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/bean-locator/</guid>
      <description>Gotz uses set of definition files to extract data from HTML pages. As HTML pages are unstructured in nature, the definition to extract and handle data can become quite complex. To learn the XML elements used by the definition files, Gotz distribution comes with a set of examples which are under def/examples folder. Examples are named as ex-1, ex-2 and so on, each with increasing complexity.
Gotz Definition Files Gotz creates the data model based on XML definition files.</description>
    </item>
    
    <item>
      <title>Simple Project - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/simple-project/</link>
      <pubDate>Fri, 11 Jan 2019 15:53:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/simple-project/</guid>
      <description>Simple Maven Project In the previous chapter we introduced Apache Maven and installed it. In this chapter, we create a simple Maven project and build it with Maven.
Maven comes with wizard to create various type of projects, but for now we are not going to use Maven to create project for us. Instead, we hand code the project as beginners can learn more from the process.
Work Dir Throughout the guide, we use a work directory to run Apache Maven examples.</description>
    </item>
    
    <item>
      <title>Local Install - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/install-locally/</link>
      <pubDate>Fri, 11 Jan 2019 08:22:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/install-locally/</guid>
      <description>Install WordPress locally While it is possible to develop WordPress Plugin on a WordPress installation hosted on server or cloud, it is much more convenient to do that on local machine.In this section, we explain the steps to install WordPress on local system.
XAMPP is probably the easiest way to install WordPress locally. XAMPP by Apache Friends bundles Apache, MySQL, PHP and Pearl as an installer. XAMPP comes as separate package for Linux, Windows and Mac.</description>
    </item>
    
    <item>
      <title>Usage - Share on Social WordPress Plugin - CodeTab</title>
      <link>https://www.codetab.org/tutorial/share-on-social-wordpress-plugin/share-on-social-usage/</link>
      <pubDate>Fri, 11 Jan 2019 06:55:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/share-on-social-wordpress-plugin/share-on-social-usage/</guid>
      <description>Usage In this blog, we explain Share on Social WordPress Plugin usage through examples. Share on Social lockers can be placed on WordPress Posts and Pages. For ease of explanation, we refer WordPress Posts and Pages as page. Basic Locker Simply by placing the content between shortcode [[share-on-social] [/share-on-social]] we can activate lockers. It uses default locker named Basic and shares the URL of the page (post or page) where locker is placed.</description>
    </item>
    
    <item>
      <title>About WordPress - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/wordpress/</link>
      <pubDate>Fri, 11 Jan 2019 00:29:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/wordpress/</guid>
      <description>WordPress is one the leading content management software that powers roughly 22% of top 10 million websites. WordPress was founded by Matt Mullenweg and Mike Little in 2003. Latest release 3.8 downloaded more than 20 million times speaks much about the popularity of the WordPress.
There are enough WordPress tutorials available on the net and you may wonder why one more. To answer that, we recap our experience in setting up the site - www.</description>
    </item>
    
    <item>
      <title>Installation - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/installation/</link>
      <pubDate>Thu, 10 Jan 2019 21:17:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/installation/</guid>
      <description>To work through the tutorial, we require Apache Ivy, Ant and IvyDE, and this chapter covers installation of software.
   Software Version Size (approximate)     Apache Ivy 2.2 1 MB   Apache Ant 1.8.2 8 MB   IvyDE Eclipse Plugin  8 MB    Apache Ant and Apache Ivy Installation
We require Apache Ant and Apache Ivy to work through the tutorial.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://www.codetab.org/home/projects/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/home/projects/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Fun with Unicode in Java</title>
      <link>https://www.codetab.org/post/java-unicode-basics/</link>
      <pubDate>Sun, 29 Sep 2019 11:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/java-unicode-basics/</guid>
      <description>Fun with Unicode in Java Normally we don&amp;rsquo;t pay much attention to character encoding in Java. However, when we crisscross byte and char streams, things can get confusing unless we know the charset basics. Many tutorials and posts about character encoding are heavy in theory with little real examples. In this post, we try to demystify Unicode with easy to grasp examples.
Encode and Decode Before diving into Unicode, first let&amp;rsquo;s understand terms - encode and decode.</description>
    </item>
    
    <item>
      <title>Java Generics</title>
      <link>https://www.codetab.org/tutorials/java-generics/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/tutorials/java-generics/</guid>
      <description>Easy to follow tutorial to learn Java Generics</description>
    </item>
    
    <item>
      <title>Definition File - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/definition-file-v094/</link>
      <pubDate>Sat, 12 Jan 2019 04:27:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/definition-file-v094/</guid>
      <description>Defs, Locators and Tasks Scoopi uses set of YML definition files to extract data from HTML pages. To learn the YML elements used by the definition files, Scoopi distribution comes with a set of examples which are under def/examples/jsoup folder. Examples are named as ex-1, ex-2 and so on, each with increasing complexity.
Scoopi Definition Files Scoopi creates the data model based on YML definition files. We can specify the definition file using scoopi.</description>
    </item>
    
    <item>
      <title>DataDef - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/datadef/</link>
      <pubDate>Fri, 11 Jan 2019 22:47:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/datadef/</guid>
      <description>DataDef Scoopi uses datadef to define data. Datadef contains query, items and dims which collectively defines the data to be scrapped from the HTML page.
In this chapter, we go through Quickstart job.xml to explain dataDef. This job.yml uses a simple DataDef which scrape one data point i.e. price of the company share from defs/examples/fin/page/acme-snapshot.html page.
The datadefs snippet from defs/examples/fin/jsoup/quickstart/job.yml is as below
dataDefs: price: query: block: &amp;quot;div#price_tick&amp;quot; selector: &amp;quot;*&amp;quot; items: [ item: { name: &amp;quot;Price&amp;quot;, value: &amp;quot;Price&amp;quot; }, ] It defines a simple dataDef named price which has two elements - query and items.</description>
    </item>
    
    <item>
      <title>DataDef Axis Member - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/datadef-axis-member/</link>
      <pubDate>Fri, 11 Jan 2019 19:13:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/datadef-axis-member/</guid>
      <description>Gotz uses datadef to define data. Datadef contains axis, query, script and members which collectively defines the data to be scrapped from the HTML page.
The job.xml in Example 1 uses a simple DataDef which scrape one data point i.e. price of the company&amp;rsquo;s share from defs/examples/page/acme-quote.html page.
The datadef snippet from defs/examples/jsoup/ex-1/job.xml is as below
&amp;lt;dataDef name=&amp;#34;price&amp;#34;&amp;gt; &amp;lt;axis name=&amp;#34;col&amp;#34;&amp;gt; &amp;lt;xf:fields&amp;gt; &amp;lt;xf:script script=&amp;#34;configs.getRunDateTime()&amp;#34; /&amp;gt; &amp;lt;/xf:fields&amp;gt; &amp;lt;member name=&amp;#34;date&amp;#34; /&amp;gt; &amp;lt;/axis&amp;gt; &amp;lt;axis name=&amp;#34;row&amp;#34;&amp;gt; &amp;lt;member name=&amp;#34;Price&amp;#34; value=&amp;#34;Price&amp;#34; /&amp;gt; &amp;lt;/axis&amp;gt; &amp;lt;axis name=&amp;#34;fact&amp;#34;&amp;gt; &amp;lt;xf:fields&amp;gt; &amp;lt;xf:query region=&amp;#34;div#price_tick&amp;#34; field=&amp;#34;\*&amp;#34; /&amp;gt; &amp;lt;/xf:fields&amp;gt; &amp;lt;/axis&amp;gt; &amp;lt;/dataDef&amp;gt; It defines a dataDef named price with three axes.</description>
    </item>
    
    <item>
      <title>Dependency Management - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/dependency-management/</link>
      <pubDate>Fri, 11 Jan 2019 14:48:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/dependency-management/</guid>
      <description>Dependency Management In the previous chapter, we created a simple Java project and build it with Maven. In this chapter, we use Maven Dependency Management feature to add external modules to the project.
Maven can manage both internal and external dependencies. For a Java project, external dependencies might be libraries such as JUnit, Apache Commons, Log4J etc., Internal dependencies are modules of a related project. We will cover internal dependencies in a later chapter when we deal with multi module projects.</description>
    </item>
    
    <item>
      <title>Simple Plugin - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/simple-plugin/</link>
      <pubDate>Fri, 11 Jan 2019 08:04:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/simple-plugin/</guid>
      <description>2.1. WordPress Simple Plugin In this section, we setup a simple WordPress Plugin and also explain an easy way to deploy it during development phase.
We use Eclipse IDE with PDT (PHP Development Tools), but you are free to use your favorite PHP IDE.
Create PHP Project
In Eclipse, create a new empty PHP project named wp-simple-plugin. Next add the plugins&amp;rsquo; main file wp-simple-plugin.php in the top folder with the following contents.</description>
    </item>
    
    <item>
      <title>Setup Apps - Share on Social WordPress Plugin - CodeTab</title>
      <link>https://www.codetab.org/tutorial/share-on-social-wordpress-plugin/create-facebook-google-plus-apps/</link>
      <pubDate>Fri, 11 Jan 2019 06:39:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/share-on-social-wordpress-plugin/create-facebook-google-plus-apps/</guid>
      <description>Facebook App ID for Share on Social First we need to register as developer with Facebook. Open Facebook Developers and sign in with your Facebook account. Clicks Apps in top menu bar and select Register as Developer from the drop down menu. Complete the developer registration process by PIN verification via SMS or Phone call. After registering as developer go back to Facebook Developers and select Add a New App from Apps drop down menu.</description>
    </item>
    
    <item>
      <title>OpenShift - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/openshift-wordpress/</link>
      <pubDate>Fri, 11 Jan 2019 01:46:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/openshift-wordpress/</guid>
      <description>In the OpenShift WordPress Tutorial, we cover the steps to create a free OpenShift account and a WordPress application.
OpenShift is a cloud computing Platform as a Service (PaaS) from Red Hat, which, in simple terms, means it offers a virtual server with all the server components we need to run an application. In other words, OpenShift offers a virtual development environment - Linux OS with Internet connectivity - where we are free to deploy, develop and run various types of application written in supported languages.</description>
    </item>
    
    <item>
      <title>Ivy Ant Tasks - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/ant-tasks/</link>
      <pubDate>Thu, 10 Jan 2019 22:51:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/ant-tasks/</guid>
      <description>This chapter explains some of the frequently used Apache Ivy Ant Tasks and Apache Ivy terminologies. We will explore them in detail throughout the tutorial.
Apache Ivy Ant Tasks
Apache Ivy comes with its own set of Ant Tasks which can be called from Ant build file. In this tutorial, we cover following Ivy Tasks
Table 2.1. Ivy Ant tasks
   Task Description     Resolve Resolves the dependencies described in ivy.</description>
    </item>
    
    <item>
      <title>Installation - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/install/</link>
      <pubDate>Thu, 10 Jan 2019 12:51:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/install/</guid>
      <description>Install GWT This chapter explains the steps required to install GWT Plugin for Eclipse.
Software used in the book are
   Software Version Size (approximate)     Eclipse 4.2 Juno 220 MB   Google Plugin for Eclipse (GPE) 3.2.0 60 MB (including any Juno updates)   GWT Designer for GPE  20 MB   Google Web Toolkit SDK 2.5.0 105 MB   Google App Engine SDK 1.</description>
    </item>
    
    <item>
      <title>Fins Demo</title>
      <link>https://www.codetab.org/projects/gwt/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/projects/gwt/</guid>
      <description>GWT app hosted on Google Cloud</description>
    </item>
    
    <item>
      <title>Hugo Webfont</title>
      <link>https://www.codetab.org/post/hugo-webfont/</link>
      <pubDate>Sat, 05 Oct 2019 10:20:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/hugo-webfont/</guid>
      <description>Hugo Webfont The share icons rendered above are not images, instead they are font icons. Font icons, also called webfont, are scalable vector icons that can be styled with css; the size, color, shadow, etc.
Font Awesome is the top choice for font icons, with more than 650 icons with minimum download size of 130KB. In case we use few icons, better option is to pick and choose icons and create a custom pack; codetab.</description>
    </item>
    
    <item>
      <title>Java Generics Wildcards - CodeTab</title>
      <link>https://www.codetab.org/tutorial/java-generics/wildcards/</link>
      <pubDate>Tue, 23 Jul 2019 13:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/java-generics/wildcards/</guid>
      <description>Wildcards The previous tutorial explained that there is no relationship, what so ever, between List&amp;lt;Food&amp;gt;, List&amp;lt;Snack&amp;gt; and List&amp;lt;Cookie&amp;gt;,even though Food, Snack and Cookie belongs to same family. Each of these list is distinct and doesn&amp;rsquo;t belongs to any single group or family; moreover, we can&amp;rsquo;t assign one to another. The wildcards helps us to overcome this restriction.
Unbounded Wildcard Consider a method to display the elements of a List.
public void display(List&amp;lt;Food&amp;gt; list) { // display the list elements  } display(new ArrayList&amp;lt;Food&amp;gt;()); display(new ArrayList&amp;lt;Snack&amp;gt;()); // error  display(new ArrayList&amp;lt;Cookie&amp;gt;()); // error  display(new ArrayList&amp;lt;Fruit&amp;gt;()); // error  display(new ArrayList&amp;lt;Apple&amp;gt;()); // error  display(new ArrayList&amp;lt;String&amp;gt;()); // error  The method can display only the list of Food and nothing else.</description>
    </item>
    
    <item>
      <title>Wordpress Made Easy</title>
      <link>https://www.codetab.org/tutorials/wordpress/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/tutorials/wordpress/</guid>
      <description>Setup High Performance WordPress site</description>
    </item>
    
    <item>
      <title>Dimensions - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/dimensions/</link>
      <pubDate>Sat, 12 Jan 2019 05:41:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/dimensions/</guid>
      <description>DataDef Dimensions The previous quickstart example scrapes stock price data from the page and associates it with the item named price. However, we are also interested to know on what date the price was scraped. The dims allows Scoopi to add multiple dimensions to scraped data.
In this chapter, we go through Example 1 job.xml to explain dimensions. The example adds date dimension to scraped price data.
Dimensions The datadefs snippet from defs/examples/fin/jsoup/ex-1/job.</description>
    </item>
    
    <item>
      <title>DataDef - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/datadef-v094/</link>
      <pubDate>Sat, 12 Jan 2019 02:47:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/datadef-v094/</guid>
      <description>DataDef Scoopi uses datadef to define data. Datadef contains axis, query, script and members which collectively defines the data to be scrapped from the HTML page.
In this chapter, we go through Example-1 job.xml to explain dataDef. This job.yml uses a simple DataDef which scrape one data point i.e. price of the company share from defs/examples/page/acme-quote.html page.
The datadef snippet from defs/examples/jsoup/ex-1/job.yml is as below
dataDefs: price: axis: fact: query: region: &amp;quot;div#price_tick&amp;quot; field: &amp;quot;*&amp;quot; col: query: script: configs.</description>
    </item>
    
    <item>
      <title>Query Region Field - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/query-region-field/</link>
      <pubDate>Fri, 11 Jan 2019 19:27:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/query-region-field/</guid>
      <description>In this chapter we describe how to build query using JSoup Selectors and same holds good for XPath while using HtmlUnit.
Selectors In Example 1, we query price data from defs/examples/page/acme-quote.html page. The price snippet from this page is
&amp;lt;div id=&amp;#34;price_tick&amp;#34;&amp;gt; &amp;lt;span id=&amp;#34;price_tick_span&amp;#34;&amp;gt; &amp;lt;strong&amp;gt;315.25&amp;lt;/strong&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt; To access the value the JSoup selector is
div#price_tick/* Use Chrome to get Selector
Chrome browser can assist you in constructing the Selector or XPath.</description>
    </item>
    
    <item>
      <title>Lifecycle Phases - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/lifecycle-phases/</link>
      <pubDate>Fri, 11 Jan 2019 15:15:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/lifecycle-phases/</guid>
      <description>Lifecycle Phases Apart from the options, the mvn command accepts only two things - goal or phase.
 This chapter covers Phases which are related to Lifecycles and in the next chapter explains Goals which are related to Plugins.
Maven Lifecycles and Phases To understand the concepts of lifecycle and phase, let&amp;rsquo;s recap how we used to build Java projects by hand.
 copy resources such as conf files to some build folder compile the source files copy dependency jars to build folder run unit tests package the build folder as jar  The job consisted of series of tasks or steps which we used to run one after another in some predefined order.</description>
    </item>
    
    <item>
      <title>Shortcode - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/shortcode/</link>
      <pubDate>Fri, 11 Jan 2019 07:46:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/shortcode/</guid>
      <description>2.2. WordPress Shortcode Let&amp;rsquo;s add some functionality to our plugin using WordPress Shortcode API.
This is our first brush with WordPress API and we go with Shortcode because they are easy to understand and implement.
WordPress Shortcode are macros that can be placed in posts. When processing the posts, WordPress replaces the shortcode with contents returned by a handler function.
Add following code to wp-simple-plugin.php after defined( &#39;ABSPATH&#39; ) or die.</description>
    </item>
    
    <item>
      <title>Screenshots - Share on Social WordPress Plugin - CodeTab</title>
      <link>https://www.codetab.org/tutorial/share-on-social-wordpress-plugin/share-social-screenshots/</link>
      <pubDate>Fri, 11 Jan 2019 06:26:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/share-on-social-wordpress-plugin/share-social-screenshots/</guid>
      <description> Share on Social Locker in action.  Google Plus Interactive Post shared by the Plugin.  Share on Social Menu and Lockers.  Add and customize your own lockers  Share details by date.  Summary stats. </description>
    </item>
    
    <item>
      <title>Installation - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/wordpress-installation/</link>
      <pubDate>Fri, 11 Jan 2019 03:06:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/wordpress-installation/</guid>
      <description>In the previous chapter, we created a WordPress application on OpenShift platform. In this chapter, we go through WordPress installation and Admin Dashboard.
WordPress Installation WordPress Installation is a simple affair. Open the app&amp;rsquo;s Public URL in the browser. If you forget to note the URL, then you need to revisit the Application Overview Screen in OpenShift Web Console and find out the Public URL. On the first access, WordPress displays the Welcome screen where we have to fill site&amp;rsquo;s title and also, information about an administrator user.</description>
    </item>
    
    <item>
      <title>Resolve - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/resolve/</link>
      <pubDate>Thu, 10 Jan 2019 22:06:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/resolve/</guid>
      <description>Resolve task, resolve dependencies described in ivy.xml and places the resolved dependencies in the Apache Ivy cache.
Let&amp;rsquo;s go through a sample project to understand this important concept. First, create a directory tree for package in.ex.ivy in the work dir
mkdir -p src/in/ex/ivy Add following class file to src/in/ex/ivy.
Example.java
package in.ex.ivy; import org.apache.commons.lang.StringUtils; public class Example { public static void main(String[] args) { String string = StringUtils.upperCase(&amp;#34;Ivy Beginner Guide&amp;#34;); System.</description>
    </item>
    
    <item>
      <title>Project Setup - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/create-project/</link>
      <pubDate>Thu, 10 Jan 2019 14:01:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/create-project/</guid>
      <description>Chapter 2. Create Project In this chapter, we are going to create a plain GWT Project and then add other components, those makes up a GWT project, by hand.
Create barebone GWT project GWT project can be created in two ways, command line tool webAppCreator or Eclipse New Web Application Project wizard .
Let&amp;rsquo;s use New Web Application wizard to create GWT project. Choose  GDT Pulldown → New Web Application Project &amp;hellip; or File → New → Web Application Project and fill details as below</description>
    </item>
    
    <item>
      <title>Kubernetes Cluster on Fedora CoreOS</title>
      <link>https://www.codetab.org/post/kubernetes-cluster-virtualbox/</link>
      <pubDate>Mon, 14 Sep 2020 11:15:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/kubernetes-cluster-virtualbox/</guid>
      <description>K8s Cluster on Fedora CoreOS VM After dabbling with Kubernetes on Minikube, I moved on to setup a three node cluster with VirtualBox and Ubuntu. It was not that difficult as some blogs and books on K8s claims but found that Ubuntu K8s cluster has its own share of drawbacks. It&amp;rsquo;s time and space: Ubuntu Server installation takes an hour and needs about 20GB of disk space for a three node cluster.</description>
    </item>
    
    <item>
      <title>Java Generics Bounded Wildcards - CodeTab</title>
      <link>https://www.codetab.org/tutorial/java-generics/bounded-wildcards/</link>
      <pubDate>Tue, 23 Jul 2019 13:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/java-generics/bounded-wildcards/</guid>
      <description>Bounded Wildcards We can use wildcard ? with either upper or lower bound.
Extends The &amp;lt;? extends Type&amp;gt; is a wildcard with upper bound. Extends allows us to restrict the unbounded List&amp;lt;?&amp;gt; to some type and its subtypes. For example, we want restrict display method only to Food and its subclasses and for change list parameter as below.
public void display(List&amp;lt;? extends Food&amp;gt; list) { // display the list elements  } display(new ArrayList&amp;lt;Food&amp;gt;()); display(new ArrayList&amp;lt;Snack&amp;gt;()); display(new ArrayList&amp;lt;Cookie&amp;gt;()); display(new ArrayList&amp;lt;Fruit&amp;gt;()); display(new ArrayList&amp;lt;Apple&amp;gt;()); display(new ArrayList&amp;lt;String&amp;gt;()); // error  display(new ArrayList&amp;lt;Integer&amp;gt;()); // error  Now display() accepts only the list of Food and its subtypes - Snack, Cookie, Fruit, Apple and nothing else.</description>
    </item>
    
    <item>
      <title>Wordpress Development</title>
      <link>https://www.codetab.org/tutorials/wordpress-plugin-development/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/tutorials/wordpress-plugin-development/</guid>
      <description>Build a real-life WordPress Plugin</description>
    </item>
    
    <item>
      <title>Dynamic Query Items - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/data-items-dynamic-query/</link>
      <pubDate>Sat, 12 Jan 2019 05:57:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/data-items-dynamic-query/</guid>
      <description>Data Items and Dynamic Query This chapter explores extracting multiple data points by defining multiple items and dynamic query.
The Example 2 extracts ten data points shown below from defs/examples/fin/page/acme-snapshot.html page.
 MARKET CAP EPS (TTM) P/E P/C BOOK VALUE PRICE/BOOK DIV (%) DIV YIELD FACE VALUE INDUSTRY P/E  The snippet of HTML from the page is
&amp;lt;div id=&amp;#34;snapshot&amp;#34;&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;MARKET CAP&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;382,642.57&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;P/E&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;-&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;BOOK VALUE&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;27.</description>
    </item>
    
    <item>
      <title>Selector - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/selector-v094/</link>
      <pubDate>Sat, 12 Jan 2019 04:34:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/selector-v094/</guid>
      <description>Query, Region and Field In this chapter we describe how to build query using JSoup Selectors.
Selectors In Example-1, we query price data from defs/examples/page/acme-quote.html page. The price snippet from this page is
&amp;lt;div id=&amp;#34;price_tick&amp;#34;&amp;gt; &amp;lt;span id=&amp;#34;price_tick_span&amp;#34;&amp;gt; &amp;lt;strong&amp;gt;315.25&amp;lt;/strong&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt; To access the value the JSoup selector is
div#price_tick/*  Use Chrome to get Selector Chrome browser can assist you in constructing the Selector or XPath. To do that, open the HTML page in Chrome and select the item which we are interested.</description>
    </item>
    
    <item>
      <title>Members Dynamic Query - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/members-dynamic-query/</link>
      <pubDate>Fri, 11 Jan 2019 19:44:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/members-dynamic-query/</guid>
      <description>This chapter explores extracting multiple values with members and dynamic query.
The Example 2 extracts snapshot data from defs/examples/page/acme-quote.html page
 MARKET CAP EPS (TTM) P/E P/C BOOK VALUE PRICE/BOOK DIV (%) DIV YIELD FACE VALUE INDUSTRY P/E  The snippet of HTML from the page is
&amp;lt;div id=&amp;#34;snapshot&amp;#34;&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;MARKET CAP&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;382,642.57&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;P/E&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;-&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;BOOK VALUE&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;27.89&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; .... The datadef used to extract data from this page is</description>
    </item>
    
    <item>
      <title>Plugin Structure - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/plugin-structure/</link>
      <pubDate>Fri, 11 Jan 2019 07:30:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/plugin-structure/</guid>
      <description>3. WordPress Plugin Structure When we plan to develop and release a production level WordPress Plugin, we have to follow certain best practices suggested by WordPress and also by other accomplished Plugin developers. WordPress Plugin structure as to follow some well defined layout.
In this section, we show how to structure a WordPress Plugin and also highlight some of the coding standards that makes the plugin easy to maintain and increase readability.</description>
    </item>
    
    <item>
      <title>Settings - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/wordpress-settings/</link>
      <pubDate>Fri, 11 Jan 2019 03:29:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/wordpress-settings/</guid>
      <description>In the previous chapter, we completed the WordPress Installation. In this chapter, we go through some of the important WordPress Settings that affect the site and some of them may become difficult to change in the future.
WordPress Settings As objective of this tutorial is to guide beginners quickly to build a high performance WordPress site, we avoid discussion on each and every setting. WordPress Settings are well documented in WordPress official Codex - WordPress Administration Screen.</description>
    </item>
    
    <item>
      <title>Posts vs Pages - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/wordpress-posts-vs-pages/</link>
      <pubDate>Fri, 11 Jan 2019 03:20:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/wordpress-posts-vs-pages/</guid>
      <description>In earlier chapters, we learned how to install and setup WordPress site on OpenShift cloud platform. Now, we are ready to add contents - Posts, Pages and Media - to the WordPress site.
Let&amp;rsquo;s add a Post to know the process and then, understand the differences between WordPress Posts and WordPress Pages.
WordPress Posts Open Dashboard → Posts to display the list of posts from the site.
 Use Add New to add a new post.</description>
    </item>
    
    <item>
      <title>Cachepath – Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/cachepath-retrieve/</link>
      <pubDate>Thu, 10 Jan 2019 22:18:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/cachepath-retrieve/</guid>
      <description>In the last chapter we worked with &amp;lt;ivy:resolve&amp;gt;, which resolves the dependencies indicated in ivy.xml file and places the resolved modules in the cache. But it does not link the dependencies to the project build path. To expose the dependencies to the Java build path, Apache Ivy provides two Ant tasks .
  &amp;lt;ivy:cachepath&amp;gt; task
  &amp;lt;ivy:retrieve&amp;gt; task
  Apache Ivy Cachepath Task
&amp;lt;ivy:cachepath&amp;gt; constructs an Ant classpath consisting of resolved artifacts in the cache.</description>
    </item>
    
    <item>
      <title>Kubernetes Cluster on Fedora CoreOS with Qemu</title>
      <link>https://www.codetab.org/post/kubernetes-cluster-qemu/</link>
      <pubDate>Tue, 15 Sep 2020 11:30:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/kubernetes-cluster-qemu/</guid>
      <description>K8s Cluster on Fedora CoreOS VM After dabbling with Kubernetes on Minikube, I moved on to setup a three node cluster with VirtualBox and Ubuntu. It was not that difficult as some blogs and books on K8s claims but found that Ubuntu K8s cluster has its own share of drawbacks. It&amp;rsquo;s time and space: Ubuntu Server installation takes an hour and needs about 20GB of disk space for a three node cluster.</description>
    </item>
    
    <item>
      <title>Java Generics Wildcards in API - CodeTab</title>
      <link>https://www.codetab.org/tutorial/java-generics/wildcards-api/</link>
      <pubDate>Fri, 01 Nov 2019 12:32:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/java-generics/wildcards-api/</guid>
      <description>Wildcard bounds in Java API The previous tutorial covered wildcard bounds in detail, and this tutorial explorers its use in Java API.
Java API extensively uses wildcard bounds, and it is essential to understand them thoroughly. As an example, we analyze java.util.Stream.map() method which is normally used along with lambda expression as follows:
List&amp;lt;String&amp;gt; list = Stream.of(&amp;#34;USA&amp;#34;, &amp;#34;Japan&amp;#34;, &amp;#34;India&amp;#34;) .map(s -&amp;gt; s.toLowerCase()) .collect(Collectors.toList()); At first glance, its method signature is bit scarry: public &amp;lt;R&amp;gt; Stream&amp;lt;R&amp;gt; map(Function&amp;lt;?</description>
    </item>
    
    <item>
      <title>Apache Ivy Guide</title>
      <link>https://www.codetab.org/tutorials/apache-ivy/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/tutorials/apache-ivy/</guid>
      <description>Beginners Guide to Apache Ivy</description>
    </item>
    
    <item>
      <title>Members - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/members-v094/</link>
      <pubDate>Sat, 12 Jan 2019 03:40:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/members-v094/</guid>
      <description>Members This chapter explores extracting multiple values with members, match property and dynamic query.
The Example 2 extracts ten data points shown below from defs/examples/page/acme-quote.html page.
 MARKET CAP EPS (TTM) P/E P/C BOOK VALUE PRICE/BOOK DIV (%) DIV YIELD FACE VALUE INDUSTRY P/E  The snippet of HTML from the page is
&amp;lt;div id=&amp;#34;snapshot&amp;#34;&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;MARKET CAP&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;382,642.57&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;P/E&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;-&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;div&amp;gt;BOOK VALUE&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;27.</description>
    </item>
    
    <item>
      <title>Index BreakAfter - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/index-indexrange-breakafter/</link>
      <pubDate>Fri, 11 Jan 2019 23:34:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/index-indexrange-breakafter/</guid>
      <description>Index, IndexRange and BreakAfter This chapter explains the use of index, indexRange and breakAfter to extract large set of data.
The Example 3 extracts multiple data from defs/examples/fin/page/acme-bs.html page, which contains Balance Sheet data of company for past five years in a HTML table with 27 rows and 5 columns. The partial contents of the table is shown below.
   Item Dec &amp;lsquo;16 Dec &amp;lsquo;15 Dec &amp;lsquo;14 Dec &amp;lsquo;13 Dec &amp;lsquo;12     Total Share Capital 804.</description>
    </item>
    
    <item>
      <title>IndexRange Index BreakAfter - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/indexrange-index/</link>
      <pubDate>Fri, 11 Jan 2019 20:02:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/indexrange-index/</guid>
      <description>This chapter explains the use of index, indexRange and dynamic query to extract set of data without using multiple queries.
Example 3 extracts data from defs/examples/page/acme-bs.html page, which contains Balance Sheet data of Acme for past five years in a HTML table with 27 rows and 5 columns. The partial contents of the table is shown below.
Dec &amp;lsquo;16
Dec &amp;lsquo;15
Dec &amp;lsquo;14
Dec &amp;lsquo;13
Dec &amp;lsquo;12
Equity
804.72
801.55</description>
    </item>
    
    <item>
      <title>Plugins - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/maven-plugins/</link>
      <pubDate>Fri, 11 Jan 2019 15:25:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/maven-plugins/</guid>
      <description>Maven Plugins The previous chapter explained the concept of Maven Lifecycle and Phases. Lifecycle phases are just steps without any capability to carryout some task and they delegate the actual work to Maven Plugins.
This chapter on Maven Plugins cover plugins goal, how they bind with lifecycle phases and plugin configuration.
The Maven core is small and it&amp;rsquo;s just capable of parsing XML files such as pom.xml and manage lifecycle and phases.</description>
    </item>
    
    <item>
      <title>Main File - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/plugin-main-file/</link>
      <pubDate>Fri, 11 Jan 2019 08:56:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/plugin-main-file/</guid>
      <description>In this chapter, we step through the plugins&amp;rsquo; main file. We also explain the benefits of PHP Classes to code the plugin instead of functions.
Plugin Info The main file share-on-social.php starts with header comments. As already described in the Section 2.1, “WordPress Simple Plugin”](wordpress-simple-plugin/), WordPress uses the header comments from the main file to display the Plugin info in plugins page.
Define Constants Throughout the plugin, we often refer some paths and constants.</description>
    </item>
    
    <item>
      <title>Themes - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/wordpress-themes/</link>
      <pubDate>Fri, 11 Jan 2019 03:45:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/wordpress-themes/</guid>
      <description>In the previous chapter, we saw how to add and manage contents - Posts, Pages and Media - in the WordPress. In this chapter, we install a new WordPress Theme and customize.
WordPress theme customizes the look and feel of the site. WordPress, being one of the leading CMS, attracts hundreds of designers and developers who contribute themes and plugins to WordPress ecosystem. There is no dearth themes to meet one&amp;rsquo;s need and on last count, there are about 2500 themes.</description>
    </item>
    
    <item>
      <title>Java Generics Type Parameter Bounds - CodeTab</title>
      <link>https://www.codetab.org/tutorial/java-generics/type-parameter-bounds/</link>
      <pubDate>Tue, 23 Jul 2019 13:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/java-generics/type-parameter-bounds/</guid>
      <description>Type Parameter Bound The List&amp;lt;E&amp;gt; can take any type as type argument. With Type Parameter Bound we can restrict accepted types.
public class FoodList&amp;lt;T extends Food&amp;gt; { public void add(T element) { } public T get(int index) { // return element  } } FoodList&amp;lt;Food&amp;gt; foods = new FoodList&amp;lt;&amp;gt;(); FoodList&amp;lt;Cookie&amp;gt; cookies = new FoodList&amp;lt;&amp;gt;(); FoodList&amp;lt;Apple&amp;gt; apples = new FoodList&amp;lt;&amp;gt;(); FoodList&amp;lt;String&amp;gt; apples = new FoodList&amp;lt;&amp;gt;(); // error  The FoodList accepts Food or any of its subtype as T extends Food, but any other type is not accepted.</description>
    </item>
    
    <item>
      <title>Filters - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/filters/</link>
      <pubDate>Fri, 11 Jan 2019 23:40:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/filters/</guid>
      <description>Filters The extracted data of the previous example contains many junk items and use filters to remove them from output.
The filter is normally applied after parse is over and data is created. The Example 5 uses filter for items/item. The filter snippet is as below
defs/examples/fin/jsoup/ex-5/job.yml
dataDefs: bs: query: block: &amp;quot;table:contains(Sources Of Funds)&amp;quot; selector: &amp;quot;tr:nth-child(%{item.index}) &amp;gt; td:nth-child(%{dim.year.index})&amp;quot; items: - item: name: item selector: &amp;quot;tr:nth-child(%{index}) &amp;gt; td:nth-child(1)&amp;quot; index: 5 breakAfter: - &amp;quot;Book Value (Rs)&amp;quot; filters: - filter: { type: value, pattern: &amp;quot;&amp;quot; } - filter: { type: value, pattern: &amp;quot;Sources Of Funds&amp;quot; } - filter: { type: value, pattern: &amp;quot;Application Of Funds&amp;quot; } dims: - item: name: year selector: &amp;quot;tr:nth-child(1) &amp;gt; td:nth-child(%{index})&amp;quot; indexRange: 2-6 The filter definition remove the members whose axis item (item) value is</description>
    </item>
    
    <item>
      <title>Filters - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/filters/</link>
      <pubDate>Fri, 11 Jan 2019 20:14:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/filters/</guid>
      <description>In the previous example, which extracted balance sheet data there are some unwanted items and we use filter to remove them from output.
The filter is normally applied after parse is over and members are constructed. The Example-5, which loads defs/examples/jsoup/ex-5/job.xml uses filter in row axis and the filter snippet from the dataDef is as below
&amp;lt;axis name=&amp;#34;row&amp;#34;&amp;gt; .... &amp;lt;filter axis=&amp;#34;row&amp;#34;&amp;gt; &amp;lt;xf:fields&amp;gt; &amp;lt;xf:filters type=&amp;#34;value&amp;#34;&amp;gt; &amp;lt;xf:filter name=&amp;#34;blank&amp;#34; pattern=&amp;#34;&amp;#34; /&amp;gt; &amp;lt;xf:filter name=&amp;#34;f1&amp;#34; pattern=&amp;#34;Sources Of Funds&amp;#34; /&amp;gt; &amp;lt;xf:filter name=&amp;#34;f2&amp;#34; pattern=&amp;#34;Application Of Funds&amp;#34; /&amp;gt; &amp;lt;/xf:filters&amp;gt; &amp;lt;/xf:fields&amp;gt; &amp;lt;/filter&amp;gt; &amp;lt;/axis&amp;gt; This filter definition remove the members whose row axis value is blank, null or &amp;ldquo;Sources Of Funds&amp;rdquo; or &amp;ldquo;Application Of Funds&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Plugin Goals - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/maven-plugin-goals/</link>
      <pubDate>Fri, 11 Jan 2019 16:39:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/maven-plugin-goals/</guid>
      <description>Maven Plugin Goals Maven plugin is a collection of one or more goals which do some task or job. It is also known as Mojo - Maven Plain Old Java Object.
For example, Maven uses maven-surefire-plugin to run tests and it comes with two goals.
 Similarly, Maven uses maven-compiler-plugin to compile the source and test files and it provides three goals - compiler:compile, compiler:testCompile and compiler:help.
&amp;nbsp;   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Hooks Actions Filters - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/hooks-actions-filters/</link>
      <pubDate>Fri, 11 Jan 2019 08:33:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/hooks-actions-filters/</guid>
      <description>WordPress Hooks, Actions and Filters are the pieces which dock plugins to WordPress core. They are at the heart of each and every plugin. In this chapter, we explain this very important aspect of plugin development.
In the plugins&amp;rsquo; main file, we use add_action() to to load admin module and similarly, many setup() methods of plugin class files use add_action(). Here is a snippet from class-options.php.
share-on-social/admin/class-options.php
class Sos_Options { public function setup () { add_action( &amp;#39;admin_init&amp;#39;, array($this,&amp;#39;init_common_options&amp;#39;) ); add_action( &amp;#39;admin_menu&amp;#39;, array($this,&amp;#39;register_settings_page&amp;#39;) ); } Let&amp;rsquo;s understand what they mean.</description>
    </item>
    
    <item>
      <title>Plugins - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/wordpress-plugins/</link>
      <pubDate>Fri, 11 Jan 2019 03:13:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/wordpress-plugins/</guid>
      <description>In the previous chapter, we customized the appearance of the site with a new theme. In this chapter, we cover some of the must have WordPress Plugins for any WordPress installation.
WordPress Plugins add and extend the functionality of WordPress. There are more than thirty thousand plugins in WordPress Plugins Directory to meet every need of a site.
Must Have WordPress Plugins Choice of plugins for a WordPress site is highly dependent on contents of the site and also on personal preferences.</description>
    </item>
    
    <item>
      <title>Pattern - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/pattern/</link>
      <pubDate>Thu, 10 Jan 2019 21:01:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/pattern/</guid>
      <description>Before going further, it&amp;rsquo;s important to understand some of the core concepts of Apache Ivy.
Apache Ivy Settings Files Till now we have used default settings to carry out the tasks. Apache Ivy allows to override the default settings through a settings file. Apache Ivy setting file is an XML file, usually named as ivysettings.xml. In subsequent chapters, we use ivysettings.xml to override the default settings.
Apache Ivy Pattern Apache Ivy uses a concept called Pattern in many tasks and settings.</description>
    </item>
    
    <item>
      <title>UIBinder – Custom Widgets - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/shell/finsshell/</link>
      <pubDate>Thu, 10 Jan 2019 10:57:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/shell/finsshell/</guid>
      <description>Part I of the GWT Tutorial explains the GWT UI design aspects and covers client side coding. It explains a menu driven multi tabbed front end and in doing so, it covers the use of essential GWT Panels, widgets,custom widgets, and a simple but effective way of handling GWT Events, and using EventBus architecture introduced in GWT ™2.x, and the benefits of @UIFactory to create the widgets. GWT Tutorial extensively uses UIBinder concept introduced in Google Web Toolkit 2.</description>
    </item>
    
    <item>
      <title>Java Generics Design - CodeTab</title>
      <link>https://www.codetab.org/tutorial/java-generics/design/</link>
      <pubDate>Tue, 23 Jul 2019 13:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/java-generics/design/</guid>
      <description>Design Generic Types The earlier tutorials covered generic subtypes, wildcards and type bounds focusing mainly on usage. In this concluding post, we discuss guidelines to follow while designing a new generic type or method.
Use wildcards on input parameters For flexibility, use wildcard types on input parameters to make them either producers or consumers.
The union method, for example, takes two sets and returns a new set which is union of two.</description>
    </item>
    
    <item>
      <title>Index BreakAfter - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/index-indexrange-breakafter-v094/</link>
      <pubDate>Sat, 12 Jan 2019 03:23:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/index-indexrange-breakafter-v094/</guid>
      <description>Index, IndexRange and BreakAfter This chapter explains the use of index, indexRange and breakAfter to extract set of data without using multiple queries.
The Example 3 extracts multiple data from defs/examples/page/acme-bs.html page, which contains Balance Sheet data of Acme for past five years in a HTML table with 27 rows and 5 columns. The partial contents of the table is shown below.
   Item Dec &amp;lsquo;16 Dec &amp;lsquo;15 Dec &amp;lsquo;14 Dec &amp;lsquo;13 Dec &amp;lsquo;12     Total Share Capital 804.</description>
    </item>
    
    <item>
      <title>Selector - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/selector-query-analyzer/</link>
      <pubDate>Fri, 11 Jan 2019 23:10:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/basic/selector-query-analyzer/</guid>
      <description>Query, Block and Selector So far in this guide, we have covered the basics locators, tasks and datadefs. In this chapter we review selectors and also, show how to get selector or xpath using Firefox or Chrome browsers and fine tune it with Query Analyzer.
Selector In Scoopi, selector is a common term which refers either to the selector (Jsoup) or to the xpath (HtmlUnit or Selenium driver) that is used to scrape data from the page.</description>
    </item>
    
    <item>
      <title>Namespace - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/namespace/</link>
      <pubDate>Fri, 11 Jan 2019 20:22:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/namespace/</guid>
      <description>Gotz defines two XML Namespaces.
 http://codetab.org/gotz http://codetab.org/xfields  They are required in root element &amp;lt;gotz&amp;gt; in the definition files bean.xml and job.xml files
&amp;lt;gotz xmlns=&amp;#34;http://codetab.org/gotz&amp;#34; xmlns:xf=&amp;#34;http://codetab.org/xfields&amp;#34;&amp;gt; .... &amp;lt;/gotz&amp;gt; The namespace http://codetab.org/gotz is default namespace and it is set with xmlns attribute.
Gotz uses extensible fields (xfields) to pass user defined values to the classes and these fields uses namespace http://codetab.org/xfields and it is set in root element using xml:xf attribute with xf prefix.</description>
    </item>
    
    <item>
      <title>Lifecycle Goals - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/maven-lifecycle-goals/</link>
      <pubDate>Fri, 11 Jan 2019 16:21:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/maven-lifecycle-goals/</guid>
      <description>Maven Lifecycle and Goals The previous section covered plugin goals and how to run goals from command line. In very few situations we invoke plugin goals directly and more often than not, lifecycle phases are preferred. In this chapter, we describe the link between Maven Lifecycle and Goals.
Lifecycle Phases and Plugin Goals When a lifecycle phase is run, depending on project type and packaging type, Maven binds plugin goals to lifecycle phases.</description>
    </item>
    
    <item>
      <title>Resolvers - Apache Ivy Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/repository-resolvers/</link>
      <pubDate>Thu, 10 Jan 2019 23:45:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/repository-resolvers/</guid>
      <description>5.2. Apache Ivy Resolvers and Repository Apache Ivy Repositories
Until now, we used the public repository to resolve dependencies. But you may want to set up your own repository for reasons like
  restricted Internet access – your network may have Internet access or usage policy. This may limit or even restrict access to Internet. Setting up an enterprise repository helps to overcome this issue.
  reliability/accuracy – modules available in public repository may have quality issues.</description>
    </item>
    
    <item>
      <title>TabLayoutPanel - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/shell/contentpanel/</link>
      <pubDate>Thu, 10 Jan 2019 11:14:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/shell/contentpanel/</guid>
      <description>3.3. ContentPanel ContentPanel Next task is to design custom widgets and dock them in DockLayoutPanel of FinsShell. Let us start with ContentPanel which displays the contents of the application. GWT comes with a stock tab panel, GWT TabLayoutPanel, which can display contents in multiple tabs and it is a perfect panel for content area.
Just for convenience, place all the custom widgets in a separate package. Go ahead and create a package  in.</description>
    </item>
    
    <item>
      <title>Multi Dimensions - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/multi-dimensions/</link>
      <pubDate>Sat, 12 Jan 2019 06:14:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/multi-dimensions/</guid>
      <description>Multiple Dimensions In this chapter, we use an example of a Book Store listing page to explain multiple dimensions.
The defs/examples/book/page/page-1.html page lists details of 20 books similar to an e-commerce site. The Example 1 extracts one book and its related data.
The snippet of HTML of a book item is
&amp;lt;article class=&amp;#34;product_pod&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;image_container&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;catalogue/a-light-in-the-attic_1000/index.html&amp;#34;&amp;gt;&amp;lt;img src=&amp;#34;media/cache/cc35693c.jpg&amp;#34; alt=&amp;#34;A Light in the Attic&amp;#34; class=&amp;#34;thumbnail&amp;#34;&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;p class=&amp;#34;star-rating Three&amp;#34;&amp;gt; &amp;lt;i class=&amp;#34;icon-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;i class=&amp;#34;icon-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;i class=&amp;#34;icon-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;h3&amp;gt;&amp;lt;a href=&amp;#34;catalogue/a-light-in-the-attic_1000/index.</description>
    </item>
    
    <item>
      <title>Filters - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/filters-v094/</link>
      <pubDate>Sat, 12 Jan 2019 03:12:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/filters-v094/</guid>
      <description>Filters The extracted data of the previous example contains many unwanted items and Scoopi provides filters to remove them from output.
The filter is normally applied after parse is over and members are created. The Example 5 uses filter for row axis. The filter snippet is as below
defs/examples/jsoup/ex-5/job.yml
row: query: region: &amp;quot;table:contains(Sources Of Funds)&amp;quot; field: &amp;quot;tr:nth-child(%{row.index}) &amp;gt; td:nth-child(1)&amp;quot; members: [ member: {name: item, index: 5, breakAfter: [&amp;quot;Book Value (Rs)&amp;quot;] }, ] filters: [ filter: { type: value, pattern: &amp;quot;&amp;quot; }, filter: { type: value, pattern: &amp;quot;Sources Of Funds&amp;quot; }, filter: { type: value, pattern: &amp;quot;Application Of Funds&amp;quot; }, ] The filter definition remove the members whose row axis value</description>
    </item>
    
    <item>
      <title>Tasks Steps - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/tasks-steps/</link>
      <pubDate>Fri, 11 Jan 2019 20:30:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/tasks-steps/</guid>
      <description>So far, we explored locators which defines the pages to scrape and dataDef which defines data to scrape from the pages. But, we haven&amp;rsquo;t defined how that work has to be carried out. This chapter defines Tasks and Steps which executes series of steps that use dataDef to scrape data from locator.
&amp;nbsp;   (adsbygoogle = window.adsbygoogle || []).push({});  &amp;nbsp; Tasks and Task The defs/examples/jsoup/ex-5/job.xml defines one task which applies dataDef named bs to locators of same group.</description>
    </item>
    
    <item>
      <title>Plugin Configuration - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/maven-plugin-configuration/</link>
      <pubDate>Fri, 11 Jan 2019 16:13:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/maven-plugin-configuration/</guid>
      <description>Maven Plugin Configuration Till now we used a basic POM that has only the project coordinates, and explored the out-of-the-box behavior of Maven core and plugins. In this tutorial, we cover the plugin configuration.
To configure plugins, we use project build element in pom.xml. The next listing shows the top level elements used to configure a plugin.
pom.xml
&amp;lt;project&amp;gt; ... &amp;lt;build&amp;gt; ... &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;...&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;...&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;...&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt;...&amp;lt;/configuration&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt;...&amp;lt;/executions&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt; &amp;lt;/build&amp;gt; &amp;lt;/project&amp;gt; The elements are</description>
    </item>
    
    <item>
      <title>Add Menu - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-settings/add-menu/</link>
      <pubDate>Fri, 11 Jan 2019 08:41:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-settings/add-menu/</guid>
      <description>6.1. WordPress Add Menu Share on Social Plugin uses common options such as FaceBook App ID. In this section, we add a new menu item - Settings - to WordPress Administration Menu to display the option page.
 In Share on Social Plugin, class file admin/class-options.php defines class Sos_Optionsto manage the Settings page.
share-on-social/admin/admin.php
require_once SOS_PATH . &amp;#39;admin/class-options.php&amp;#39;; /** * Class to load admin modules */ class Sos_Admin { /** * initializes the admin modules */ function setup () { $sos_options = new Sos_Options(); $sos_options-&amp;gt;setup(); .</description>
    </item>
    
    <item>
      <title>W3 Cache Settings - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/w3-total-cache/settings/</link>
      <pubDate>Fri, 11 Jan 2019 01:55:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/w3-total-cache/settings/</guid>
      <description>W3 Total Cache - Page Cache In the previous chapter, we installed essential plugins to extend the functionality of the WordPress. In this chapters, we optimize the site to boost the performance.
Out of the box, WordPress performance is suboptimal. Performance penalty stems from the dynamic nature of the pages and the scripting language used to develop the WordPress. Unlike regular programming languages, scripting languages like PHP interpret the code on the fly.</description>
    </item>
    
    <item>
      <title>Logging - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/shell/gwt-logging/</link>
      <pubDate>Thu, 10 Jan 2019 11:22:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/shell/gwt-logging/</guid>
      <description>3.4. LogTab In GWT, client side log messages may be sent to the server or log them in the client itself. LogTab composite displays log messages on the client side.
Add LogTab.java and LogTab.ui.xml to in.fins.client.content package. Please note that content related classes are placed in in.fins.client.content whereas custom widgets are placed in in.fins.client.widget.
in.fins.client.content/LogTab.ui.xml
&amp;lt;!DOCTYPE ui:UiBinder SYSTEM &amp;#34;http://dl.google.com/gwt/DTD/xhtml.ent&amp;#34;&amp;gt; &amp;lt;ui:UiBinder xmlns:ui=&amp;#34;urn:ui:com.google.gwt.uibinder&amp;#34; xmlns:g=&amp;#34;urn:import:com.google.gwt.user.client.ui&amp;#34;&amp;gt; &amp;lt;g:ScrollPanel&amp;gt; &amp;lt;g:VerticalPanel ui:field=&amp;#34;logArea&amp;#34;&amp;gt; &amp;lt;g:Label text=&amp;#34;Client Log&amp;#34; styleName=&amp;#34;fins-ContentHeader-Label&amp;#34; /&amp;gt; &amp;lt;/g:VerticalPanel&amp;gt; &amp;lt;/g:ScrollPanel&amp;gt; &amp;lt;/ui:UiBinder&amp;gt; in.</description>
    </item>
    
    <item>
      <title>Multiple Tasks - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/multiple-tasks-v094/</link>
      <pubDate>Sat, 12 Jan 2019 03:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/multiple-tasks-v094/</guid>
      <description>Multiple Tasks Scoopi can execute multiple tasks for a locator and also multiple tasks on multiple locatorGroups.
Multiple tasks and single Locator group The Example-1 scrape Price data from acme-quote.html page while Example-2 extracts Snapshot data from the same page. One option is to define acme-quote.html locator in two locatorGroups and assign task to each of them. This unnecessarily downloads acme-quote.html twice. Instead, it is better to define single locatorGroup and assign two tasks</description>
    </item>
    
    <item>
      <title>Multi Tasks - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/multi-tasks/</link>
      <pubDate>Fri, 11 Jan 2019 23:51:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/multi-tasks/</guid>
      <description>Multiple Tasks Scoopi can execute multiple tasks for a locator and also multiple tasks on multiple locatorGroups.
Multiple tasks and single Locator group The Example-1 from fin folder scrape Price data from acme-snapshot.html page while Example-2 extracts Snapshot data from the same page. One option is to define acme-snapshot.html locator in two locatorGroups and assign task to each of them. This unnecessarily downloads acme-snapshot.html twice. Instead, it is better to define single locatorGroup and assign two tasks - priceTask and snapshotTask so that page downloads only once.</description>
    </item>
    
    <item>
      <title>Multiple Tasks - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/multiple-task-tasks/</link>
      <pubDate>Fri, 11 Jan 2019 20:43:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/multiple-task-tasks/</guid>
      <description>We can define multiple task for tasks and also, multiple tasks are allowed in a job file.
The Example-1 scrapes Price data from acme-quote.html page while Example-2 extracts Snapshot data from the same page. We can add these two task within tasks element.
But before doing that let&amp;rsquo;s introduce one more feature - steps reference - which extracts steps into separate entity which can be used by both tasks.
&amp;nbsp;   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Plugin Execution - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/maven-plugin-execution/</link>
      <pubDate>Fri, 11 Jan 2019 16:48:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/maven-plugin-execution/</guid>
      <description>Maven Plugin Execution In the previous tutorial, we saw plugin configuration. In this tutorial, we cover the Maven Plugin execution configuration.
Configure Plugin Execution The element &amp;lt;executions&amp;gt;/&amp;lt;execution&amp;gt; allows you to configure the execution of a plugin goal. With it, you can accomplish the following things.
  bind a plugin goal to a lifecycle phase.
  configure plugin parameters of a specific goal.
  configure plugin parameters of a specific goal such as compiler:compile, surefire:test etc.</description>
    </item>
    
    <item>
      <title>Settings API - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-settings/settings-api/</link>
      <pubDate>Fri, 11 Jan 2019 09:27:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-settings/settings-api/</guid>
      <description>6.2. WordPress Settings API In the previous blog, we add a sub menu to admin menu to accept common settings from users. In this blog, we add sections and fields to the menu page.
WordPress Settings API allows developers to add form pages to Admin screen by defining pages, sections and fields and partially automates the form and data management.
But before that, we briefly touch upon WordPress Options API, which we use to store plugins&amp;rsquo; settings or options in WordPress database.</description>
    </item>
    
    <item>
      <title>W3 Total Browser Cache - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/w3-total-cache/browser-cache/</link>
      <pubDate>Fri, 11 Jan 2019 05:39:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/w3-total-cache/browser-cache/</guid>
      <description>7.2. W3 Total Cache Browser Cache In the previous section, we installed W3 Total Cache and enabled its Page Cache module. This section shows the best W3 Total Cache Browser Cache Settings to boost the WordPress performance and page speed.
W3 Total Cache Browser Cache Browser can cache the pages, JavaScript, CSS and media when user views a web page and on subsequent visits to the page or site, reuse the cached objects instead of repeated fetches from the site.</description>
    </item>
    
    <item>
      <title>Install Task - Local Repository - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/install-task-local-repository/</link>
      <pubDate>Thu, 10 Jan 2019 21:29:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/install-task-local-repository/</guid>
      <description>To build private repository like local or shared repositories we have to copy the module&amp;rsquo;s files and artifacts from public repository to private repository and we have to use Apache Ivy Install task for this. It resolves a module and its dependencies from a repository and install them in another repository. Apache Ivy Install task copies module&amp;rsquo;s ivy file and artifacts from a source repository to a target repository.
Let&amp;rsquo;s see Apache Ivy Install task in action by building some private repositories.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.codetab.org/home/about/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/home/about/</guid>
      <description>Many open source software documentations come with a quick start and reference document. The reference documentation covers the advanced aspects such as customization, API, configuration, etc., and caters to the advanced users.
For beginners, the most helpful resource is the Quick start tutorial. But beyond that, to assemble a project, they have search for tips and ideas. Many would simply give up as they look for comprehensive guide that covers more ground than the quick starts.</description>
    </item>
    
    <item>
      <title>Steps - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/steps-and-plugins-v094/</link>
      <pubDate>Sat, 12 Jan 2019 05:01:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/steps-and-plugins-v094/</guid>
      <description>Steps So far, we explored locators to define the pages to scrape, tasks to execute and dataDef to parse data from the pages. But, we haven&amp;rsquo;t explained how Scoopi executes tasks and scrape data.
Scoopi is designed to execute tasks as workflow which is normally referred as steps which in turn consists of multiple step. By default, Scoopi ships with two defaults steps jsoupDefault and htmlUnitDefault and they are defined in steps-default.</description>
    </item>
    
    <item>
      <title>Workflows Steps - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/workflow-steps-plugins/</link>
      <pubDate>Fri, 11 Jan 2019 23:59:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/workflow-steps-plugins/</guid>
      <description>Steps So far, we explored locators, tasks and dataDef to scrape data from the pages. But, we haven&amp;rsquo;t explained how Scoopi executes tasks and scrape data.
Scoopi is designed to execute tasks as workflow which is normally referred as steps which in turn consists of multiple step. Scoopi ships with two in-built defaults steps jsoupDefault and htmlUnitDefault and they are defined in steps-default.yml which is packaged inside Scoopi distribution jar. We can access the contents of steps-default.</description>
    </item>
    
    <item>
      <title>Converters - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/converters/</link>
      <pubDate>Fri, 11 Jan 2019 20:56:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/converters/</guid>
      <description>In this chapter we cover step override and converters.
Step Override When using common steps, we can override any step at task level.
In Example-8, defs/examples/jsoup/ex-8/job.xml, we override DataConverter step of commonSteps in bs task. The relevant snippet is shown below
&amp;lt;steps name=&amp;#34;commonSteps&amp;#34;&amp;gt; ... &amp;lt;step name=&amp;#34;converter&amp;#34; class=&amp;#34;org.codetab.gotz.step.convert.DataConverter&amp;#34;&amp;gt; &amp;lt;nextStep&amp;gt;appender&amp;lt;/nextStep&amp;gt; &amp;lt;/step&amp;gt; .... &amp;lt;/steps&amp;gt; &amp;lt;tasks name=&amp;#34;quote tasks&amp;#34; group=&amp;#34;quote&amp;#34;&amp;gt; &amp;lt;task name=&amp;#34;snapshot task&amp;#34; dataDef=&amp;#34;snapshot&amp;#34;&amp;gt; &amp;lt;steps ref=&amp;#34;commonSteps&amp;#34; /&amp;gt; &amp;lt;/task&amp;gt; .... &amp;lt;/tasks&amp;gt; &amp;lt;tasks name=&amp;#34;bs&amp;#34; group=&amp;#34;bs&amp;#34;&amp;gt; &amp;lt;task name=&amp;#34;bs&amp;#34; dataDef=&amp;#34;bs&amp;#34;&amp;gt; &amp;lt;steps ref=&amp;#34;commonSteps&amp;#34;&amp;gt; &amp;lt;step name=&amp;#34;converter&amp;#34; class=&amp;#34;org.</description>
    </item>
    
    <item>
      <title>Project Object Model - POM - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/maven-project-object-model/</link>
      <pubDate>Fri, 11 Jan 2019 17:00:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/maven-project-object-model/</guid>
      <description>Maven Project Object Model So far in the handbook, we used bit and pieces of Maven POM (pom.xml) without going to deep into the subject. In this section, we formally introduce Maven Project Object Model (POM), one of the central concept of Maven. Having gone through other concepts such as lifecycle phase, plugins and goals, we can now put many aspects of POM into perspective than before.
In POM, we declare project&amp;rsquo;s identity and structure, configure builds, and relate projects to one another.</description>
    </item>
    
    <item>
      <title>Options Page - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-settings/options-page/</link>
      <pubDate>Fri, 11 Jan 2019 09:13:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-settings/options-page/</guid>
      <description>6.3. WordPress Options Page In previous two blogs, we created a sub menu and saw how to add fields with WordPress Settings API. In this blog, as the final step, we explore WordPress Settings functions to render the WordPress Options Page.
While adding the sub menu, we passed render_settings_page() method as callback function to add_submenu_page() function . The callback method has to echo the HTML required to display the page and also, use WordPress Settings API functions to output the registered fields.</description>
    </item>
    
    <item>
      <title>W3 Total Minify - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/w3-total-cache/minify-settings/</link>
      <pubDate>Fri, 11 Jan 2019 05:53:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/w3-total-cache/minify-settings/</guid>
      <description>7.3. W3 Total Cache - Minify In the previous sections, we installed W3 Total Cache Plugin and enabled its two cache modules - Page cache and Browser cache. In this section, we show how go about the W3 Total Cache Minify Settings.
W3 Total Cache Minify Usually, HTML pages contain links to JavaScript, Stylesheet and Media. When we view the source of a WordPress page, in the header section, we find links to a number of JavaScript and CSS files.</description>
    </item>
    
    <item>
      <title>Shared Repository - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/shared-repository/</link>
      <pubDate>Thu, 10 Jan 2019 23:32:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/shared-repository/</guid>
      <description>6.2. Apache Ivy Shared Repository Apache Ivy Shared Repository
Shared repository is similar to a local repository in almost all aspects except that all users can access a shared repository and whereas local repository is private to the user who owns it.
Default configuration comes with a resolver named shared which points to $HOME/.ivy2/shared directory. If you don&amp;rsquo;t like a shared repository in your home directory, then it may be moved to any other locations.</description>
    </item>
    
    <item>
      <title>ClientBundle - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/menu/menu/</link>
      <pubDate>Thu, 10 Jan 2019 13:17:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/menu/menu/</guid>
      <description>Chapter 4. Menu This Chapter covers design of Menu system used by Fins. Menu contains three widgets
  MenuItem
  MenuHeader
  MenuBar
   Figure 4.1. Menu parts MenuHeader is a stylish header that display menu categories. MenuItem is GWT Anchor widget and the user clicks them to invoke menu options. MenuBar is a StackLayoutPanel with MenuHeader as header and MenuItem as content.
 console.log(&#34;slot C&#34;</description>
    </item>
    
    <item>
      <title>Converters - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/converters-v094/</link>
      <pubDate>Sat, 12 Jan 2019 02:25:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/converters-v094/</guid>
      <description>Converters This chapter explain step override and converters.
Step Override We can override any step at task level. The Example 8 overrides converter step of jsoupDefault steps in bs task. The relevant snippet is shown below
defs/examples/jsoup/ex-8/job.yml
bsGroup: bsTask: dataDef: bs steps: jsoupDefault: converter: class: &amp;quot;org.codetab.scoopi.step.convert.DataConverter&amp;quot; previous: process next: appender The other tasks in the example uses jsoupDefault steps as it is but the bsTask takes all steps from jsoupDefault and replace converter step with the step defined locally at task level.</description>
    </item>
    
    <item>
      <title>Converters - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/converters/</link>
      <pubDate>Sat, 12 Jan 2019 00:16:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/converters/</guid>
      <description>Converters This chapter explain adding new steps to workflow and converter plugins.
Add new Step We can add new steps at task level. The Example 8 adds converter step to jsoupDefault steps in bs task. The relevant snippet is shown below
defs/examples/fin/jsoup/ex-8/job.yml
bsTask: dataDef: bs steps: jsoupDefault: converter: class: &amp;quot;org.codetab.scoopi.step.process.DataConverter&amp;quot; previous: filter next: appender .... The bsTask uses jsoupDefault built-in step as base and inserts converter step between filter and appender steps.</description>
    </item>
    
    <item>
      <title>Resources Plugin - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/maven-resources-plugin/</link>
      <pubDate>Fri, 11 Jan 2019 15:41:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/maven-resources-plugin/</guid>
      <description>Maven Resource Plugin The previous chapter of the guide covered basics of Maven Plugins. This chapter explains Maven Resources Plugin which Maven uses to handle the project resources.
Resources are non source files of the project such as properties files, XML configuration files, shell scripts files and also, binary files like images etc., Maven Resources Plugin (plugin prefix resources) copies resource files from source directories to output directory. Apart from the standard resources:help goal, the plugin has three goals:</description>
    </item>
    
    <item>
      <title>Performance Analyze - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/w3-total-cache/performance-analyze/</link>
      <pubDate>Fri, 11 Jan 2019 04:20:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/w3-total-cache/performance-analyze/</guid>
      <description>7.4. Analyze Performance In this previous sections, we setup W3 Total Cache to boost the WordPress performance. In this section, we cover one more WordPress Optimization technique and also explore the tools that help us to analyze the WordPress Performance and pinpoint areas that need tuning.
WordPress Optimize Images We use a lot of PNG images in our pages instead of JPG as PNG supports more colors and livelier than JPG images.</description>
    </item>
    
    <item>
      <title>Publish - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/publish/</link>
      <pubDate>Thu, 10 Jan 2019 22:00:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/publish/</guid>
      <description>Occasionally we may want to add modules developed by us to the repository. This chapter explains the Apache Ivy Publish Task which publishes modules to Ivy Repository.
Apache Ivy Publish Task
&amp;lt;ivy:publish&amp;gt; task publishes module&amp;rsquo;s artifacts and resolved descriptor to a repository. It is used to publish our own modules or even modules developed by others which are not available in any repository.
Install v/s Publish
&amp;lt;ivy:install&amp;gt; copies modules from a source repository to a destination repository.</description>
    </item>
    
    <item>
      <title>Anchors - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/menu/menu-parts/</link>
      <pubDate>Thu, 10 Jan 2019 11:37:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/menu/menu-parts/</guid>
      <description>4.2. Menu MenuHeader MenuHeader widget is the header for the menu bar stacks. Add ui and class file to in.fins.client.widget package.
in.fins.client.widget/MenuHeader.ui.xml
&amp;lt;!DOCTYPE ui:UiBinder SYSTEM &amp;#34;http://dl.google.com/gwt/DTD/xhtml.ent&amp;#34;&amp;gt; &amp;lt;ui:UiBinder xmlns:ui=&amp;#34;urn:ui:com.google.gwt.uibinder&amp;#34; xmlns:g=&amp;#34;urn:import:com.google.gwt.user.client.ui&amp;#34;&amp;gt; &amp;lt;ui:with type=&amp;#34;in.fins.client.FinsResources&amp;#34; field=&amp;#34;resource&amp;#34; /&amp;gt; &amp;lt;g:SimplePanel&amp;gt; &amp;lt;g:HorizontalPanel&amp;gt; &amp;lt;g:Image ui:field=&amp;#34;image&amp;#34; /&amp;gt; &amp;lt;g:Image resource=&amp;#34;{resource.blank}&amp;#34; /&amp;gt; &amp;lt;g:HTML ui:field=&amp;#34;html&amp;#34; /&amp;gt; &amp;lt;/g:HorizontalPanel&amp;gt; &amp;lt;/g:SimplePanel&amp;gt; &amp;lt;/ui:UiBinder&amp;gt; in.fins.client.widget/MenuHeader.java
package in.fins.client.widget; import com.google.gwt.core.client.GWT; import com.google.gwt.resources.client.ImageResource; import com.google.gwt.uibinder.client.UiBinder; import com.google.gwt.uibinder.client.UiConstructor; import com.google.gwt.uibinder.client.UiField; import com.google.gwt.user.client.ui.Composite; import com.google.gwt.user.client.ui.HTML; import com.google.gwt.user.client.ui.Image; import com.google.gwt.user.client.ui.Widget; public class MenuHeader extends Composite { interface MenuHeaderBinder extends UiBinder&amp;lt;Widget, MenuHeader&amp;gt; { } private static UiBinder&amp;lt;Widget, MenuHeader&amp;gt; binder = GWT .</description>
    </item>
    
    <item>
      <title>Scripter - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/scripter/</link>
      <pubDate>Sat, 12 Jan 2019 06:29:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/scripter/</guid>
      <description>Script Plugin The example in the previous chapter converts date field using built-in DateRoller plugin. However, it is not possible to handle all types of modification with built-in plugins. To cope with myriad possibilities, Scoopi provides Scripter step to which user can hook arbitrary JavaScript to modify data.
Scripter Step The Example 8a adds process step to jsoupDefault steps in bs task. The relevant snippet is shown below
defs/examples/fin/jsoup/ex-8a/job.yml
bsTask: dataDef: bs steps: jsoupDefault: process: class: &amp;quot;org.</description>
    </item>
    
    <item>
      <title>Link Locator - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/create-locators-links-v094/</link>
      <pubDate>Sat, 12 Jan 2019 05:16:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/create-locators-links-v094/</guid>
      <description>Create Locators from Links The definitions would become lengthy when we define each and every link in job.xml. Instead, we can use Scoopi to scrape links from a start page and dynamically create locators. This feature allows you to recursively scrape the web pages. Let&amp;rsquo;s see how to create locators from scraped links.
Link Scrape Step The Example 9 scrapes Balance Sheet and Profit &amp;amp; Loss links from acme-quote.html page. Links snippet in the html page is as below.</description>
    </item>
    
    <item>
      <title>Persistence - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/persistence/</link>
      <pubDate>Fri, 11 Jan 2019 21:10:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/persistence/</guid>
      <description>With persistence, Gotz offers following benefits.
 reduce network usage as it can reuse the downloaded pages recover from the aborted run without redoing the tasks already completed avoid expensive parse operation as it can reuse the persisted data set expiry date for each page  If you installed Gotz from GitHub, then to run examples with persistence we need to setup database. We explain how to install and setup HSQLDB as it is the easy one.</description>
    </item>
    
    <item>
      <title>Manage Directories - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/manage-maven-directories/</link>
      <pubDate>Fri, 11 Jan 2019 15:00:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/manage-maven-directories/</guid>
      <description>Manage Directories In the previous chapter, while explaining the Effective POM we saw how Maven configures the various directories of a Maven project. In this chapter, we show how to manage Maven directories.
Projects gain much by adapting to the Maven default directory layout. However, when migrating an existing project that is generated by an IDE or project that is using other build systems such as Apache Ant, you may wish to retain the existing directory structure and postpone the project restructuring to another day.</description>
    </item>
    
    <item>
      <title>Custom Post Type - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-custom-posts/post-type/</link>
      <pubDate>Fri, 11 Jan 2019 09:36:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-custom-posts/post-type/</guid>
      <description>7.1. WordPress Custom Post Type With Share on Social Plugin, admins can create and configure multiple Social Lockers. While it is not impossible to use WordPress option to store locker settings, better approach would be to use WordPress Custom Post Type which provides much more robust and convenient framework to manage multiple items of a type.
In this chapter, we explain how to add new WordPress Custom Post Type and manage custom posts and its meta data.</description>
    </item>
    
    <item>
      <title>IvyDE Eclipse Plugin - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/ivyde/eclipse-ivyde-plugin-resolve/</link>
      <pubDate>Thu, 10 Jan 2019 21:41:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/ivyde/eclipse-ivyde-plugin-resolve/</guid>
      <description>Command line Apache Ivy was quite helpful to learn Ivy concepts and basic tasks, but it is a bit difficult to work with that in an IDE. IvyDE Plugin for Eclipse, which bundles Apache Ivy and Ivy Ant tasks, enables Eclipse projects to exploit the full benefits of Apache Ivy for project dependency management.
Before proceeding further, install IvyDE Plugin for Eclipse as explained in Apache Ivy and IvyDE Installation.</description>
    </item>
    
    <item>
      <title>EventBus - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/menu/gwt-eventbus-events/</link>
      <pubDate>Thu, 10 Jan 2019 11:54:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/menu/gwt-eventbus-events/</guid>
      <description>4.3. GWT EventBus and Events ContentPanel has to listen for MenuItem clicks and add tab with appropriate content.
Traditional Event Handling Implement ClickHandler in ContentPanel with the following modifications.
in.fins.client.widget/ContentPanel.java
.... import com.google.gwt.event.dom.client.ClickEvent; import com.google.gwt.event.dom.client.ClickHandler; import com.google.gwt.user.client.ui.Anchor; import com.google.gwt.user.datepicker.client.DateBox; ..... public class ContentPanel extends ResizeComposite implements ClickHandler .... @Override public void onClick(ClickEvent event) { String text = ((Anchor) event.getSource()).getText(); addTab(text, new DateBox()); } .... DateBox is a placeholder, and actual content replaces it later.</description>
    </item>
    
    <item>
      <title>Persistence - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/persistence-v094/</link>
      <pubDate>Sat, 12 Jan 2019 04:11:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/persistence-v094/</guid>
      <description>Persistence With persistence, Scoopi offers following benefits.
 reduce network usage as it can reuse the downloaded pages recover from the aborted run without redoing the tasks already completed avoid expensive parse operation as it can reuse the persisted data set expiry date for each page  Setup Database If you running Scoopi from docker image then no database setup is required as docker image contains pre-configured MariaDB container. Please refer Scoopi with MariaDB to run Scoopi with MariaDB using docker-compose.</description>
    </item>
    
    <item>
      <title>Scrape Links - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/create-locators-links/</link>
      <pubDate>Sat, 12 Jan 2019 00:29:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/create-locators-links/</guid>
      <description>Create Locators from Links The definitions would become lengthy when we define each and every link in job.xml. Instead, Scoopi can scrape links from any page and dynamically create locators. This feature allows you to recursively scrape the web pages. Let&amp;rsquo;s see how to create locators from scraped links.
Link Scrape Step The Example 9 scrapes Balance Sheet and Profit &amp;amp; Loss links from acme-snapshot.html page. Links snippet in the html page is as below.</description>
    </item>
    
    <item>
      <title>Appenders Encoders - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/appenders-encoders/</link>
      <pubDate>Fri, 11 Jan 2019 21:17:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/appenders-encoders/</guid>
      <description>Gotz uses appenders to append data to output and encoders to encode (alter the output format) the output. At present, it comes with two appenders - FileAppender and DbAppender.
FileAppender So far, all examples use FileAppender which is defined as follows
&amp;lt;steps name=&amp;#34;commonSteps&amp;#34;&amp;gt; ... other steps ... &amp;lt;step name=&amp;#34;appender&amp;#34; class=&amp;#34;org.codetab.gotz.step.load.DataAppender&amp;#34;&amp;gt; &amp;lt;nextStep&amp;gt;end&amp;lt;/nextStep&amp;gt; &amp;lt;appender name=&amp;#34;file&amp;#34; class=&amp;#34;org.codetab.gotz.step.load.appender.FileAppender&amp;#34;&amp;gt; &amp;lt;encoder name=&amp;#34;csv&amp;#34; class=&amp;#34;org.codetab.gotz.step.load.encoder.CsvEncoder&amp;#34;&amp;gt; &amp;lt;delimiter&amp;gt;,&amp;lt;/delimter&amp;gt; &amp;lt;/encoder&amp;gt; &amp;lt;file&amp;gt;output/data.txt&amp;lt;/file&amp;gt; &amp;lt;/appender&amp;gt; &amp;lt;/step&amp;gt; &amp;lt;/steps&amp;gt; To use appenders, first we must define a step that uses class DataAppender and this class is responsible for creation of appenders.</description>
    </item>
    
    <item>
      <title>Archetype Plugin - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/maven-archetype-plugin/</link>
      <pubDate>Fri, 11 Jan 2019 14:42:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/maven-archetype-plugin/</guid>
      <description>Maven Archetype Plugin In the previous tutorial, we covered Maven Resources Plugin. In this tutorial, we introduce Maven Archetype Plugin.
An archetype is a template for a Maven project which is used by the Maven Archetype plugin to create new projects. Simply put, it generates skeleton for different types of projects.
To better understand, lets create a new project using Maven Archetype Plugin.
$ mvn archetype:generate -DgroupId=com.xyz -DartifactId=my-app -Dversion=1.0 -DpackageName=com.xyz -DarchetypeGroupId=org.</description>
    </item>
    
    <item>
      <title>Meta Box - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-custom-posts/meta-box/</link>
      <pubDate>Fri, 11 Jan 2019 09:52:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-custom-posts/meta-box/</guid>
      <description>7.2. WordPress Meta Box In the previous blog, we saw how to register a new custom post type named sos and use it as Social Lockers. To manage the custom post type items, in this blog we setup, render and customize Sos Locker editor with WordPress Meta Box.
While registering the custom post type, we used register_meta_box_cb to register the callback method setup_meta_boxes().
share-on-social/admin/class-sos.php
public function create_post_type () { register_post_type( $this-&amp;gt;post_type, // other args &amp;#39;register_meta_box_cb&amp;#39; =&amp;gt; array($this,&amp;#39;setup_meta_boxes&amp;#39;) ) ); .</description>
    </item>
    
    <item>
      <title>SEO Tips - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/seo/seo-tips/</link>
      <pubDate>Fri, 11 Jan 2019 04:08:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/seo/seo-tips/</guid>
      <description>WordPress SEO Tips In the previous chapter, we learned about WordPress performance optimization. While performance is an important aspect that influences the page ranking, search engines also look at various other factors to rank a page. In this chapter, we use WordPress SEO Plugin and look at Search Engine Optimization (SEO) techniques to improve the ranking.
Before getting into the WordPress SEO Plugin, let&amp;rsquo;s focus on contents of the posts and pages and improve them for search engines.</description>
    </item>
    
    <item>
      <title>EvenBus - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/menu/gwt-eventbus-example/</link>
      <pubDate>Fri, 11 Jan 2019 00:05:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/menu/gwt-eventbus-example/</guid>
      <description>4.4. GWT EventBus Example One of the best widgets to explain the benefits of EventBus is Status widget. Various objects of the application may like to send messages to Status widget for display, and with the traditional style, each and every object has to register Status widget as a handler, and for this, all interested objects has to get a reference to the Status widget. But EventBus eliminates these unnecessary couplings.</description>
    </item>
    
    <item>
      <title>IvyDE Settings - Apache Ivy Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-ivy/ivyde/ivyde-settings-retrieve/</link>
      <pubDate>Thu, 10 Jan 2019 21:50:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-ivy/ivyde/ivyde-settings-retrieve/</guid>
      <description>This chapter explains the IvyDE Settings which are useful to enable project specific behavior. Settings are managed through IvyDE Managed Libraries window that has tabs for Settings, Retrieve and Advanced.
IvyDE Managed Libraries
To manage Ivy settings in Eclipse, you need to open IvyDE Managed Libraries window and to open that, there should be an Ivy Library in the project build path which is added using Add Ivy Library, as explained in the last chapter.</description>
    </item>
    
    <item>
      <title>Pagination - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/pagination/</link>
      <pubDate>Sat, 12 Jan 2019 06:40:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/pagination/</guid>
      <description>Pagination Many pages provide pagination buttons or links to navigate through series of pages. We can use link locators described in previous chapter to scrape pages using pagination.
The Books example folder contains three HTML pages which has pagination link at the bottom of pages.
defs/examples/book/page/page-1.html
&amp;lt;div&amp;gt; &amp;lt;ul class=&amp;#34;pager&amp;#34;&amp;gt; &amp;lt;li class=&amp;#34;current&amp;#34;&amp;gt;Page 1 of 50&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;#34;next&amp;#34;&amp;gt;&amp;lt;a href=&amp;#34;page-2.html&amp;#34;&amp;gt;next&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; The Books Example 4 go through each page and scrape book items.</description>
    </item>
    
    <item>
      <title>Appender Encoder - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/appender-and-encoder-v094/</link>
      <pubDate>Sat, 12 Jan 2019 02:11:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/appender-and-encoder-v094/</guid>
      <description>Appender and Encoder Scoopi uses appender to append data to output and encoder to encode or alter the output format. At present, it comes with two appender - FileAppender and ListAppender.
FileAppender So far, all examples use FileAppender defined in default steps steps-default.yml packaged in scoopi distribution jar. The appender snippet from is as below
appender: class: &amp;quot;org.codetab.scoopi.step.load.DataAppender&amp;quot; previous: converter next: end plugins: [ plugin: { name: file, class: &amp;quot;org.codetab.scoopi.plugin.appender.FileAppender&amp;quot;, file: &amp;quot;output/data.</description>
    </item>
    
    <item>
      <title>Split Definitions - Gotz ETL - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gotz-etl/split-definitions/</link>
      <pubDate>Fri, 11 Jan 2019 21:31:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gotz-etl/split-definitions/</guid>
      <description>The definition file job.xml tends to grow as you scrape more and more data sets or pages. This chapter explains how to split the definitions into multiple files for easy maintenance.
Gotz allows you to split the definitions either on job types or on model types.
&amp;nbsp;   (adsbygoogle = window.adsbygoogle || []).push({});  &amp;nbsp; Split on Job Types The examples so far scraped BS, PL, Quote data - price and snapshot - of Acme.</description>
    </item>
    
    <item>
      <title>Project Distribution - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/distribution/maven-project-distribution/</link>
      <pubDate>Fri, 11 Jan 2019 17:10:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/distribution/maven-project-distribution/</guid>
      <description>Project Distribution Let&amp;rsquo;s go through various ways to distribute Maven projects.
As Package To manually distribute the project we can use mvn package command. Based on project type, Maven binds different goals to package phase which packages the code and resources as an archive file such as Jar, War etc., The built-in packaging types and the goal used for each of them is as follows:
  JAR - it is the default packaging type and Maven binds jar:jar goal to package phase.</description>
    </item>
    
    <item>
      <title>Save Post - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-custom-posts/save-post/</link>
      <pubDate>Fri, 11 Jan 2019 10:10:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/admin-module-custom-posts/save-post/</guid>
      <description>7.3. WordPress Save Post In the previous two blogs, we saw how to add custom post type and customize post editor. In this blog, we cover the steps to save the custom post and its meta data.
 We added sos custom post type as use it as social lockers. Sos Lockers defines four meta data fields. One of benefits of WordPress Custom Post Type is that we can use WordPress Post management framework to handle activities such as publish, trash and edit.</description>
    </item>
    
    <item>
      <title>SEO Plugin - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/seo/wordpress-seo-plugin/</link>
      <pubDate>Fri, 11 Jan 2019 05:14:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/seo/wordpress-seo-plugin/</guid>
      <description>8.2. WordPress SEO Plugin In the previous section, we learned some of the important SEO recommendations to improve page rank. In this section, we put those recommendations into action with the help of WordPress SEO Plugin.
WordPress SEO Plugin by Yoast is one the leading search engine optimization (SEO) plugins for WordPress. WordPress SEO Plugin helps us to:
  Set SEO Title for the page.
  Set Meta Description for the page.</description>
    </item>
    
    <item>
      <title>Model - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/model/model/</link>
      <pubDate>Thu, 10 Jan 2019 13:35:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/model/model/</guid>
      <description>Chapter 5. Model Domain Model Data model of the application consists of following classes
  Symbol – holds details about a symbol
  DataGroup – holds various categories of data like BS (Balance Sheet), PL (Profit and Loss), CF (Cash Flow) etc
  Data - segregates the data into different time periods.
  Fact - holds key and value for each item of financial indicator
  UML diagram of the model is as shown in figure</description>
    </item>
    
    <item>
      <title>Split Definitions - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/split-definitions-v094/</link>
      <pubDate>Sat, 12 Jan 2019 04:46:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/split-definitions-v094/</guid>
      <description>Split Definitions The Scoopi definition file tends to grow as you scrape more and more data sets or pages. This chapter explains how to split the definitions into multiple files for easy maintenance.
Scoopi allows you to split the definitions either on job types or on top level elements.
Split on Job Types The examples so far scraped BS, PL, Quote data - price and snapshot - of Acme. We can split the definitions into three job types quote, bs and pl.</description>
    </item>
    
    <item>
      <title>Appenders Encoders - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/appender-encoder/</link>
      <pubDate>Sat, 12 Jan 2019 01:09:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/appender-encoder/</guid>
      <description>Appender and Encoder Scoopi uses appender to append data to output and encoder to encode or alter the output format. At present, it comes with two appender - FileAppender and ListAppender.
FileAppender So far, examples use FileAppender of default steps defined in steps-default.yml which is packaged with scoopi distribution jar. The appender snippet is as below.
appender: class: &amp;quot;org.codetab.scoopi.step.load.DataAppender&amp;quot; previous: filter next: end plugins: [ plugin: { name: dataFile, class: &amp;quot;org.</description>
    </item>
    
    <item>
      <title>Assembly Plugin - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/distribution/maven-assembly-plugin/</link>
      <pubDate>Fri, 11 Jan 2019 17:27:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/distribution/maven-assembly-plugin/</guid>
      <description>Maven Assembly Plugin In the previous chapter we saw various ways to distribute Maven Project. However when packing the project for distribution we require more control over the way package is done. The Maven Assembly Plugin allows finegrain control to assemble the project.
The Maven Assembly Plugin allows users to package the project output with its dependencies, modules, site documentation, and other files into a single distributable archive.
Assembly Plugin ships with four Pre-defined Descriptor Files.</description>
    </item>
    
    <item>
      <title>Contents - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/content/</link>
      <pubDate>Thu, 10 Jan 2019 12:01:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/content/</guid>
      <description>Content GWT project contains three content pages.
  Snapshot – displays financial details like Balance Sheet (BS), Profit and Loss A/c (PL), Quarterly data (Qtr), Cash Flow (CF) and Holding details of a Symbol with forward or backward navigation capability to view other periods. It has collapsible graphs of Price, Price to Earnings (PE) and Price to Book (PB) movements. For each category a Pop up displays data for the entire period.</description>
    </item>
    
    <item>
      <title>DOM Loader - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/dom-loader-selenium-webdriver/</link>
      <pubDate>Sat, 12 Jan 2019 06:47:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/dom-loader-selenium-webdriver/</guid>
      <description>JavaScript and WebDriver So far in the guide, the examples scrape data from regular HTML pages. But, we encounter many web pages that generates and renders pages with JavaScript or Ajax functions. In this and next chapter, we explore ways to seamlessly scrape such pages.
Dynamically generated pages The website toscrape.com has many endpoints showing the quotes in many different way that are generated through DOM manipulation.
Open JavaScript - JavaScript generated contents page and view its page source.</description>
    </item>
    
    <item>
      <title>Logs - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/logs-v094/</link>
      <pubDate>Sat, 12 Jan 2019 03:34:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/logs-v094/</guid>
      <description>Logs Scoopi uses Logback library for logging. By default, it logs info message to console and log errors to logs/error.log file.
Debug and Trace logs The logback configuration file logback.xml is located in conf folder. By default root log level is info which outputs only error, warn and info logs. To output debug logs, change root level to debug and un-comment appender-ref ref=&amp;quot;debuglog&amp;rdquo; element.
Similarly for trace logs. Trace logs output query and parsed html nodes which is helpful to construct query strings.</description>
    </item>
    
    <item>
      <title>Profiles - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/profile/maven-profiles/</link>
      <pubDate>Fri, 11 Jan 2019 17:53:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/profile/maven-profiles/</guid>
      <description>Maven Profiles Maven Profiles which allows to define multiple set of configurations and activate them based on certain conditions.
Maven Profile is an alternative set of configurations which set or override default values. Profiles allow to customize a build for different environments. Profiles are configured in the pom.xml and each profile is identified with an identifier.
Profiles customizes the build for different environments. Some of the examples of different environments are:</description>
    </item>
    
    <item>
      <title>Enqueue Scripts - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/frontend/enqueue-scripts/</link>
      <pubDate>Fri, 11 Jan 2019 10:19:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/frontend/enqueue-scripts/</guid>
      <description>In the tutorial, so far, we covered WordPress Plugin basics and the admin module. In this chapter, we describe the frontend of Share on Social Plugin, the plugin project developed in the tutorial.
For frontend, Share on Social Plugin uses class file class-frontend.php and the methods may broadly divided into three groups.
  which handle locker shortcode, fetch locker information and output social lockers.
  which handle scripts and stylesheets.</description>
    </item>
    
    <item>
      <title>CellTable - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/gwt-celltable/</link>
      <pubDate>Thu, 10 Jan 2019 18:36:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/gwt-celltable/</guid>
      <description>6.7. FactTable This section uses GWT CellTable to display the data in a table. FactTable displays facts of a category for a specific date. FactTable may be nested within another FactTable, and inner FactTable can display facts of another category. Figure shows a nested FactTable where outer FactTable shows Facts as on Mar 2012 for category PL and inner FactTable displays Facts for category Cash Flow. On load, Snapshot displays Facts for the latest available date for each category.</description>
    </item>
    
    <item>
      <title>Ajax - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/ajax-selenium-webdriver/</link>
      <pubDate>Sat, 12 Jan 2019 07:03:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/advanced/ajax-selenium-webdriver/</guid>
      <description>Browser interaction with WebDriver In this previous chapter, we scrape data from page with JavaScript created contents. In this chapter, we extend it further and show how to interact with WebDriver to emulate browser automation.
Browser Scrolling and Ajax The Quote Example 2 scrape quotations from Scroll - infinite scrolling pagination page loads next set of quotes through Ajax call when we scroll to the bottom of browser.
The locator and task snippet from this example is as below.</description>
    </item>
    
    <item>
      <title>Dashboard - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/dashboard-v094/</link>
      <pubDate>Sat, 12 Jan 2019 02:35:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/dashboard-v094/</guid>
      <description>Dashboard Scoopi Dashboard is an nice little Angular web app that displays useful information such as system, task and pool stats.
The screenshot of the Scoopi dashboard is
 Embedded Jetty Web Server serves the dashboard and we can access the Scoopi dashboard at http://localhost:9010 while Scoopi is running. The dashboard can kept running even after scoopi is finished and use the same one for next run as it stops when scoopi terminates and refreshes itself once it detects that scoopi is running again.</description>
    </item>
    
    <item>
      <title>Pass Data to JavaScript - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/frontend/pass-data-to-javascript/</link>
      <pubDate>Fri, 11 Jan 2019 10:48:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/frontend/pass-data-to-javascript/</guid>
      <description>8.2. WordPress Pass Data to JavaScript In the previous blog, we saw how to enqueue plugin scripts and stylesheets. We also enqueued an external JavaScript - Twitter API script. In this tutorial, we explain the steps to pass data to JavaScript.
WordPress Pass Data to Scripts Share on Social Plugin can share the blogs to Facebook, Google Plus and Twitter. Out of the three, Twitter API is the easiest as it doesn&amp;rsquo;t require an App, while Facebook SDK requries an APP ID and Google Plus SDK expects a Client ID to share the blogs.</description>
    </item>
    
    <item>
      <title>Google Analytics - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/webmaster-tools/google-analytics/</link>
      <pubDate>Fri, 11 Jan 2019 02:07:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/webmaster-tools/google-analytics/</guid>
      <description>Google Analytics for WordPress In the previous chapter, we finished Search Engine Optimization. In this chapter, we cover a related area, Webmaster Tools, that helps us tweak some of the left out areas. To start with, we try out Google Analytics and get insights into visitors who visit the site.
There are many products and plugins to gather and present analytics about the traffic to a WordPress site. We choose Google Analytics for our site for the ease of setup, customizable dashboard and reports.</description>
    </item>
    
    <item>
      <title>SuggestBox - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/gwt-autosuggest/</link>
      <pubDate>Thu, 10 Jan 2019 15:56:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/gwt-autosuggest/</guid>
      <description>6.2. AutoSuggest AutoSuggest accepts user input and displays matching list of Symbols for selection. It uses GWT SuggestBox to display suggestions those matches input.
Default SuggestOracle of SuggestBox is MultiWordSuggestOracle which displays sorted drop down list of matches. List of names comes from SymbolDatabase.getSymbolNames(), which returns names of four symbols, and method  MultiWordSuggestOracle.setSymbolNames() adds list to the oracle.
in.fins.client.widget/AutoSuggest.java
private void setSymbolNames() { List&amp;lt;String&amp;gt; list = SymbolDatabase.getSymbolNames(); ((MultiWordSuggestOracle) suggestBox.getSuggestOracle()).addAll(list); } In Part 2 of the book, RPS calls to the server replaces SymbolDatabase calls.</description>
    </item>
    
    <item>
      <title>Persistence - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/persistence/</link>
      <pubDate>Sat, 12 Jan 2019 01:02:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/persistence/</guid>
      <description>Persistence With persistence, Scoopi offers following benefits.
 reduce network usage by reusing the downloaded pages recover from the aborted run by skipping the tasks already completed avoid expensive parse operation by reuse of persisted data set expiry date for each page  Setup Database If you running Scoopi from docker image then no database setup is required as docker image contains pre-configured MariaDB container. Please refer Scoopi Installation to run Scoopi with MariaDB using docker-compose.</description>
    </item>
    
    <item>
      <title>Multi Module Project - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/multi-module/multi-module-project/</link>
      <pubDate>Fri, 11 Jan 2019 17:45:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/multi-module/multi-module-project/</guid>
      <description>Maven Multi Module As project size and complexity increases, it makes sense to split the project into multiple modules. While it is always possible to split the project into multiple projects and link them as dependencies, it complicates the build process. In Maven, the preferred approach is to structure the project as multi module project and delegate the rest to Maven.
In this tutorial, we go through a simple multi module project.</description>
    </item>
    
    <item>
      <title>Debug Info - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/frontend/debug-info/</link>
      <pubDate>Fri, 11 Jan 2019 10:32:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/frontend/debug-info/</guid>
      <description>8.3. WordPress Debug Info To support Share on Social Plugin developed in the tutorial, plugin need to collect debug info. In this tutorial, we describe the steps to dump debug info.
After the release, sooner or later, plugin developer has to face bug reports and support requests. To troubleshoot, developer requires inputs from the user as well as debug info to understand the plugin usage by the user. In Share on Social Plugin, when user enables Debug in Settings page, plugin collects info about Share Lockers used in a page and dump the debug info as comments at the end of the pages.</description>
    </item>
    
    <item>
      <title>Google Webmaster Tools - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/webmaster-tools/google-webmaster-tools/</link>
      <pubDate>Fri, 11 Jan 2019 02:28:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/webmaster-tools/google-webmaster-tools/</guid>
      <description>9.2. Google Webmaster Tools In the previous section, we linked WordPress to Google Analytics to analyze the traffic. Earlier we also configured WordPress SEO for search engine optimization. While, these two tools greatly help us to optimize and analyze the site performance still there are many areas that are not covered by them. In this section, we use Google Webmaster Tools to analyze the site further.
Google Webmaster Tools cover following aspects:</description>
    </item>
    
    <item>
      <title>TitlePanel - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/titlepanel/</link>
      <pubDate>Thu, 10 Jan 2019 19:48:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/titlepanel/</guid>
      <description>6.3. TitlePanel TitlePanel displays the symbol name on selection by the user and uses a SimplePanel and Label.
Why a separate widget when a Label is suffice, and reason for this is with more and more widgets added to Snapshot events handling becomes complicated and with a separate widget we can wire events much more elegantly. Hence TitlePanel is pulled out as a separate widget with TitlePanel.ui.xml and TitlePanel.java.
Snapshot uses TitlePanel in Snapshot.</description>
    </item>
    
    <item>
      <title>DB Setup - Scoopi Web Scraper - CodeTab</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/db-setup-v094/</link>
      <pubDate>Sat, 12 Jan 2019 03:02:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper-v094/db-setup-v094/</guid>
      <description>Setup HSQLDB Database for Scoopi To run examples with persistence we need HSQLDB up and running. Download HSQLDB version 2.3 and extract it to some folder. To create database and start HSQLDB server, run
cd hsqldb-2.3.0/hsqldb java -cp lib/hsqldb.jar org.hsqldb.server.Server --database.0 file:data/scoopi --dbname.0 scoopi  This creates database named scoopi and places database files in data directory.
Use HSQLDB client to connect running database and to do that run following from another console</description>
    </item>
    
    <item>
      <title>Split Definitions - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/split-definitions/</link>
      <pubDate>Sat, 12 Jan 2019 01:18:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/split-definitions/</guid>
      <description>Split Definitions The Scoopi definition file tends to grow as you scrape multiple types of data or large set of links. This chapter explains how to split the definitions into multiple files for easy maintenance.
Scoopi allows you to split the definitions either on job types or on top level elements.
Split on Job Types The examples so far scraped BS, PL, snapshot data - price and snapshot - of Acme.</description>
    </item>
    
    <item>
      <title>Maven Hierarchical Multi Module Project - CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/multi-module/hierarchical-project/</link>
      <pubDate>Fri, 11 Jan 2019 21:49:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/multi-module/hierarchical-project/</guid>
      <description>Hierarchical Multi Module Project The previous tutorial explained the structure of a simple multi module project. Let&amp;rsquo;s extend it further to learn advanced features of Maven multi module project.
The example code is available at GitHub Maven Examples. Download the examples as zip and extract it to some location or clone it with git.
Flat vs Hierarchical Layout In extended-multi project, we add one more module to simple-multi and the new module, config, has one class ConfigService that uses Apache Commons Configuration library to manage configurations of the app.</description>
    </item>
    
    <item>
      <title>UiFactory - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/gwt-uifactory/</link>
      <pubDate>Thu, 10 Jan 2019 20:11:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/gwt-uifactory/</guid>
      <description>6.4. UiFactory UiBinder constructs a widget in multiple ways, and they fall into two categories.
  UiBinder creates the widget and insert it to UI structure.
  Application code creates the widget and hand it over to UiBinder to insert it to UI structure.
  Widget creation delegated to UiBinder This is of two types - without value attributes and with value attributes.
Without value attributes - For &amp;lt;f:TitlePanel ui:field=”titlePanel” /&amp;gt;, UiBinder uses default constructor of TitlePanel to create the widget.</description>
    </item>
    
    <item>
      <title>Logs - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/logs/</link>
      <pubDate>Sat, 12 Jan 2019 01:29:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/logs/</guid>
      <description>Logs Scoopi uses Logback library for logging. By default, it logs info message to console and log errors to logs/error.log file.
Debug and Trace logs The logback configuration file logback.xml is located in conf folder. By default root log level is info which outputs error, warn and info logs.
To output debug logs, change root level to debug and un-comment appender-ref ref=&amp;quot;debuglog&amp;rdquo; element. and similarly, for trace logs. The trace logs output query and parsed html nodes which is helpful to construct query strings.</description>
    </item>
    
    <item>
      <title>Multi Module Inheritance - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/multi-module/inheritance/</link>
      <pubDate>Fri, 11 Jan 2019 21:55:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/multi-module/inheritance/</guid>
      <description>Multi Module Inheritance The previous tutorials explained the structure of simple and hierarchical multi module project. This tutorial explain the use of inheritance feature to compact and streamline the module POMs.
The example code extended-multi, used in this tutorial, is available at GitHub Maven Examples. Download the examples as zip and extract it to some location or clone it with git.
Most elements from the parent POM are inherited by its children.</description>
    </item>
    
    <item>
      <title>Ajax - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/ajax/wordpress-ajax/</link>
      <pubDate>Fri, 11 Jan 2019 11:01:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/ajax/wordpress-ajax/</guid>
      <description>In Share on Social Plugin, we use WordPress Ajax to save and view the share statistics. In this chapter, we use WordPress Ajax to send share details from client to server and save it as WordPress options and then add a menu page to display the statistics in Google Charts.
9.1. WordPress Ajax When user shares a blog, functions in js/share.js use Social Network API to share and on success, send the share details to the server.</description>
    </item>
    
    <item>
      <title>Import Static Site - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/import/import-static-html-site/</link>
      <pubDate>Fri, 11 Jan 2019 01:28:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/import/import-static-html-site/</guid>
      <description>10.1. WordPress Import Static HTML site In the previous chapters, we saw WordPress installation and optimization. In this chapter, we cover importing Static HTML site and pages as WordPress Posts or Pages and managing dynamic stylesheets of web pages in WordPress.
Sample HTML Files
To import static HTML site or pages, we need to access OpenShift Shell through RHC or PuTTY (for Windows users). OpenShift RHC Client Tools explains RHC and PuTTY setup.</description>
    </item>
    
    <item>
      <title>FactPanel - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/factpanel/</link>
      <pubDate>Thu, 10 Jan 2019 18:22:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/factpanel/</guid>
      <description>6.5. FactPanel FactPanel displays FactItem in a HorizontalPanel as shown in figure.
 Figure 6.4. FactPanel FactItem is a widget with two Labels, one for text and another for value, and FactPanel holds the FactItems. Instead of UiBinder template, FactPanel and FactItem directly extends HorizontalPanel.
in.fins.client.widget/FactItem.java
public class FactItem extends HorizontalPanel { private Label label; private String[] matchs; private Label value; private String category; @UiConstructor public FactItem(String category, String text, String match) { this.</description>
    </item>
    
    <item>
      <title>Dashboard - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/dashboard/</link>
      <pubDate>Sat, 12 Jan 2019 01:36:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/dashboard/</guid>
      <description>Dashboard Scoopi Dashboard is an nice little Angular web app that displays useful information such as system, task and pool stats.
The screenshot of the Scoopi dashboard is
 Embedded Jetty Web Server serves the dashboard and we can access the Scoopi dashboard at http://localhost:9010 while Scoopi is running. The dashboard can kept running even after scoopi is finished and use the same one for next run as it stops when scoopi terminates and refreshes itself once it detects that scoopi is running again.</description>
    </item>
    
    <item>
      <title>Multi Module Dependency - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/multi-module/dependency-management/</link>
      <pubDate>Fri, 11 Jan 2019 22:12:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/multi-module/dependency-management/</guid>
      <description>Multi Module Dependency Management Dependency inheritance (explained in previous chapter) is useful when a dependency is required by all child modules. When a dependency is required by some or even many, but not by all modules, then use dependency management feature.
The example code extended-multi, used in this tutorial, is available at GitHub Maven Examples. Download the examples as zip and extract it to some location or clone it with git.</description>
    </item>
    
    <item>
      <title>Chart Page - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/ajax/chart-page/</link>
      <pubDate>Fri, 11 Jan 2019 11:09:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/ajax/chart-page/</guid>
      <description>9.2. WordPress Chart Page In the next two blogs, we add a sub menu to Share on Social Plugin menu to display the share statistics with Google Charts API. The chart page uses functionalities already discussed in following topics.
  Add Menu
  Options Page
  Plugin Enqueue Scripts
  Pass Data to JavaScript
  Ajax
  The plugin uses two files admin/class-stats.php and js/chart.</description>
    </item>
    
    <item>
      <title>Child Theme - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/import/child-theme/</link>
      <pubDate>Fri, 11 Jan 2019 04:37:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/import/child-theme/</guid>
      <description>10.2. WordPress Child Theme In the previous section, we import static HTML files with HTML Import 2 Plugin. The Plugin imports the HTML content and linked images, but it does not import the linked stylesheets and rightly so! In this section, we use WordPress child theme to handle page stylesheets.
WordPress Theme Components Before extending a theme with a child theme, let&amp;rsquo;s understand the structure and components of a WordPress theme.</description>
    </item>
    
    <item>
      <title>DisclosurePanel - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/gwt-disclosepanel/</link>
      <pubDate>Thu, 10 Jan 2019 17:51:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/gwt-disclosepanel/</guid>
      <description>6.6. FactDisclosePanel FactDisclosePanel shows or hide the Price, PB and PE graphs.
 Figure 6.6. FactDisclosePanel FactDisclosePanel (FDP) uses two GWT widgets, GWT DisclosurePanel and inner CaptionPanel. DisclosurePanel, contains header and a content panel, that discloses the underlying content when a user clicks the header, and CaptionPanel encloses its contents with border and a caption on upper left corner.
in.fins.client.widget/FactDisclosePanel.java
@UiField(provided = true) DisclosurePanel dPanel; @UiField CaptionPanel cPanel; @UiConstructor public FactDisclosePanel(String header, String caption) { FinsResources images = FinsResources.</description>
    </item>
    
    <item>
      <title>Google Charts - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/ajax/google-charts/</link>
      <pubDate>Fri, 11 Jan 2019 11:22:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/ajax/google-charts/</guid>
      <description>9.3. WordPress Google Charts In the previous blog, we setup a new sub menu page to display the charts and enqueue Google Chart API scripts. In this blog, we explain the steps to load Google Chart API, fetch chart data with Ajax and draw WordPress Google Charts.
Load Google Charts API Google Charts is a versatile package to present data as charts. It is robust and provides large number of ready to use chart types.</description>
    </item>
    
    <item>
      <title>Dynamic Stylesheets - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/import/dynamic-stylesheets/</link>
      <pubDate>Fri, 11 Jan 2019 05:28:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/import/dynamic-stylesheets/</guid>
      <description>10.3. WordPress Dynamic Stylesheets In the previous chapter, we understood the structure of a WordPress theme and use it to construct a basic child theme. We also saw the use of the template files in a child theme. In this section - WordPress Dynamic Stylesheets, we explore the child theme further and use it to enable dynamic stylesheets in the WordPress.
Earlier we used HTML Import 2 Plugin to import static HTML pages to WordPress.</description>
    </item>
    
    <item>
      <title>Eclipse Plugin - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/eclipse/maven-eclipse-plugin/</link>
      <pubDate>Fri, 11 Jan 2019 18:01:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/eclipse/maven-eclipse-plugin/</guid>
      <description>Maven Eclipse Plugin So far, we worked with Maven CLI. In this chapter, we install Eclipse Maven Plugin and learn to manage Maven Project in Eclipse IDE.
Eclipse Maven Plugin, M2Eclipse or simply M2E, provides integration between Eclipse IDE and Maven. Among other things, it assists in the following aspects of Maven.
  view contents of local and remote Maven repositories.
  provides wizards to create single module project or multi module Maven Projects.</description>
    </item>
    
    <item>
      <title>Toolbar - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/toolbar/</link>
      <pubDate>Thu, 10 Jan 2019 20:03:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/toolbar/</guid>
      <description>6.8. Toolbar FactTable displays the latest available data for a category, but the user may also like to view data for previous periods, and through ToolbarItem user may navigate Forward or Backward.
 Figure 6.11. Toolbar Following UI declaration adds ToolbarItem to  FactTable.
in.fins.client.content/Snapshot.ui.xml
&amp;lt;g:customCell&amp;gt; &amp;lt;f:FactTable captionText=&amp;#34;BS&amp;#34; category=&amp;#34;BS&amp;#34;&amp;gt; &amp;lt;f:FactTable captionText=&amp;#34;Holding&amp;#34; category=&amp;#34;Shareholding&amp;#34;&amp;gt; &amp;lt;f:ToolbarItem type=&amp;#34;previous&amp;#34; category=&amp;#34;Shareholding&amp;#34; /&amp;gt; &amp;lt;f:ToolbarItem type=&amp;#34;next&amp;#34; category=&amp;#34;Shareholding&amp;#34; /&amp;gt; &amp;lt;/f:FactTable&amp;gt; &amp;lt;f:ToolbarItem type=&amp;#34;previous&amp;#34; category=&amp;#34;BS&amp;#34; /&amp;gt; &amp;lt;f:ToolbarItem type=&amp;#34;next&amp;#34; category=&amp;#34;BS&amp;#34; /&amp;gt; &amp;lt;/f:FactTable&amp;gt; &amp;lt;/g:customCell&amp;gt; This UI snippet adds ToolbarItem, forward and backward, to outer as well as to inner FactTables.</description>
    </item>
    
    <item>
      <title>Eclipse Maven Project - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/eclipse/manage-eclipse-maven-project/</link>
      <pubDate>Fri, 11 Jan 2019 18:15:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/eclipse/manage-eclipse-maven-project/</guid>
      <description>Manage Eclipse Maven Project In the previous tutorial we installed M2E Plugin and created Maven Project with it. In this tutorial, we describe the features of M2E that are useful to manage Eclipse Maven Project.
POM Editor When we open pom.xml in Eclipse, M2E opens it in GUI POM Editor shown in the screenshot.
 The Overview tab is useful to manage project coordinates, parent or modules of the project and properties.</description>
    </item>
    
    <item>
      <title>Internationalization - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/internationalization/internationalize/</link>
      <pubDate>Fri, 11 Jan 2019 11:33:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/internationalization/internationalize/</guid>
      <description>Even though we used many WordPress Plugin Internationalization functions in the tutorial so far, we didn&amp;rsquo;t explain what they really do. In this chapter, we explore WordPress Plugin Internationalization and Localization techniques.
WordPress Plugin Handbook chapter - WordPress Plugin Internationalization explains the topic well, but for new developers it may be difficult to comprehend all that in one go and, more often than not, internationalization moves to TODO list.
Rather than the later refactoring, it is easy to internationalize the plugin from the start .</description>
    </item>
    
    <item>
      <title>Backup - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/backup/wordpress-backup/</link>
      <pubDate>Fri, 11 Jan 2019 03:53:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/backup/wordpress-backup/</guid>
      <description>11.1. WordPress Backup So far in the tutorial, we covered WordPress topics that assist us to install WordPress, add contents, optimize the performance and page ranking. All that effort we put to build a quality site may go in vein unless we have a good WordPress Backup and Restore strategy. In this chapter, we cover WordPress Backup topics - Backup, Restore, Migrate and Clone.
WordPress Backup There are a number of plugins for WordPress backup.</description>
    </item>
    
    <item>
      <title>DataGrid - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/gwt-datagrid/</link>
      <pubDate>Thu, 10 Jan 2019 18:06:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/gwt-datagrid/</guid>
      <description>6.9. FactGrid FactGrid uses GWT DataGrid widget to display the data in a tabular view. Instead of adding it to Snapshot which already full with widgets, a GWT PopupPanel comes handy to display more data without forcing the user to leave the page.
 Figure 6.13. FactGrid Like the CellTable, which we used earlier in FactTable, GWT DataGrid also displays data in tabular view. Both are subclasses of AbstractCellTable and supports columns, sorting, paging whereas DataGrid additionally has a Header, Footer and a scrollable content area in the center.</description>
    </item>
    
    <item>
      <title>Useful Help Commands - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/plugins/useful-maven-help-commands/</link>
      <pubDate>Fri, 11 Jan 2019 14:20:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/plugins/useful-maven-help-commands/</guid>
      <description>Maven Help Command When we are struck with some aspect of Maven, Plugin&amp;rsquo;s Help goal and Maven Help Plugin comes handy to navigate output of the situation.
Here we present some the useful Maven help commands as reference.
Find Plugin Prefix In almost all Maven plugin related commands we need to use Plugin Prefix. We can find plugin prefixes in Maven Plugin Directory. The first column of the table contains the Plugin Prefixes.</description>
    </item>
    
    <item>
      <title>Localization - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/internationalization/localization/</link>
      <pubDate>Fri, 11 Jan 2019 11:44:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/internationalization/localization/</guid>
      <description>10.2. WordPress Plugin Localization After internationalization of the plugin, next step is to prepare language files. This process is known as Localization which consists of following steps.
  generate Portable Object Template (POT) file.
  generate Portable Object (PO) file for each language.
  get PO file translated by a translator.
  generate Machine Object (MO) file from each PO file.
  Install Software To generate POT file, install WordPress Tools with following commands.</description>
    </item>
    
    <item>
      <title>Dropbox Backup - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/backup/dropbox-backup/</link>
      <pubDate>Fri, 11 Jan 2019 04:44:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/backup/dropbox-backup/</guid>
      <description>11.2. WordPress Dropbox Backup In the previous section, we backup the WordPress installation. In this section, we setup Dropbox to receive files from OpenShift and then automate the WordPress Dropbox Backup process.
OpenShift to Dropbox It makes sense to move the backup files out of OpenShift to Dropbox as it serves two purposes - conserves storage space and in the unlikely event of application corruption, we have a safe set in Dropbox.</description>
    </item>
    
    <item>
      <title>Google Charts - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/gwt-chart/</link>
      <pubDate>Thu, 10 Jan 2019 16:51:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/gwt-chart/</guid>
      <description>6.10. Chart Earlier, we designed FactDisclosePanel and ChartPanel but stopped short of completing the actual charts as it may be difficult to grasp at that stage. In this chapter, we are going to complete it and display charts using Google Chart Tools also known as Google Visualization.
 Figure 6.16. Chart Install Google Chart Tools GWT SDK doesn&amp;rsquo;t ship with Chart module, and we have to download and add Google Chart Tools module to the project.</description>
    </item>
    
    <item>
      <title>Eclipse Maven Multi Module - Apache Maven Tutorial – CodeTab</title>
      <link>https://www.codetab.org/tutorial/apache-maven/eclipse/eclipse-maven-multi-module/</link>
      <pubDate>Fri, 21 Jun 2019 22:12:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/apache-maven/eclipse/eclipse-maven-multi-module/</guid>
      <description>Eclipse Maven Multi Module In this tutorial we explain steps to create a Maven Multi Module Project using Eclipse Maven Plugin (M2E) Wizard.
The main steps are
 create top level maven project add modules to top level project  Create Top Level Maven Project Open Maven Project Wizard with File → New → Others → Maven → Maven Project.
 The wizard opens Select project name and location window. Check the Create a simple project checkbox to create a bare bone project and click Next.</description>
    </item>
    
    <item>
      <title>Restore Clone Migrate - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/backup/restore-clone-migrate/</link>
      <pubDate>Fri, 11 Jan 2019 04:57:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/backup/restore-clone-migrate/</guid>
      <description>11.3. WordPress Restore, Clone In the previous section, we saw how to offload the backup files to the Dropbox. In this section, we use the backup for a full WordPress restore and also to clone it to a new site and use it cloned site as testing or staging area.
WordPress Restore WordPress Restore procedure involves following steps:
  Create a new WordPress application on OpenShift.
  Import MySQL dump to database.</description>
    </item>
    
    <item>
      <title>Close Tabs - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/content/gwt-close-tabs/</link>
      <pubDate>Thu, 10 Jan 2019 17:03:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/content/gwt-close-tabs/</guid>
      <description>6.11. Close Tabs Last thing we are going to do on the client side is to add a control to close the tabs.
 Figure 6.17. ClosePanel Except the remove() method offered by TabLayoutPanel, there is no other well documented method to close the tab, but using this method to close tab is little cumbersome when there are multiple tabs. Hence, we are designing a custom widget to do the job.</description>
    </item>
    
    <item>
      <title>Activation - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/plugin-activation/</link>
      <pubDate>Fri, 11 Jan 2019 11:53:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/plugin-activation/</guid>
      <description>While it is true that WordPress takes care of the majority of the activation and deactivation process, these phases are ideal to carryout any specific customizations related to the plugin. With this background, in this chapter we cover WordPress Plugin Activation, Deactivation and Uninstall phases in detail and also, how to deal them in WordPress Multisite Installations.
11.1. WordPress Plugin Activation In Share on Social Plugin, we use Activation phase to remove stale basic locker that is left over by the previous installation and also, add settings such as plugin version etc.</description>
    </item>
    
    <item>
      <title>OpenShift Install WordPress - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/openshift/install-source/</link>
      <pubDate>Fri, 11 Jan 2019 02:52:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/openshift/install-source/</guid>
      <description>Through out the WordPress Tutorial, we stick with the WordPress installed from OpenShift Instant App bundled by OpenShift team. While, OpenShift Instant Apps are stable and updated frequently, we still prefer to do a OpenShift WordPress install from its source.
Consider this scenario. We have a site with WordPress 3.8.3 and every week, on Sunday, we take the backup. Meanwhile, WordPress releases version 3.9 and next Wednesday, OpenShift updates the Instant App to 3.</description>
    </item>
    
    <item>
      <title>Multisite - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/enable-multisite/</link>
      <pubDate>Fri, 11 Jan 2019 12:29:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/enable-multisite/</guid>
      <description>11.2. Enable WordPress Multisite To understand plugin multisite activation, we require a WordPress Multisite installation. In this blog, we install a new instance and enable WordPress Multisite.
Install WordPress So far in the tutorial, we used WordPress Single Site installation and it is possible to convert it to Multisite installation. Still, better approach is to install a new instance of WordPress and use it for multisite testing so as to leave the existing installation free for single site testing.</description>
    </item>
    
    <item>
      <title>OpenShift DNS Setup - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/openshift/dns-setup/</link>
      <pubDate>Fri, 11 Jan 2019 00:40:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/openshift/dns-setup/</guid>
      <description>In this appendix OpenShift DNS Setup, we describe the steps to setup a Domain name or DNS name for an OpenShift WordPress application.
WordPress site that is behind a custom domain name is easy to migrate to another hosting platform without affecting the search ranking and traffic.
Take the case of codetab.org and its real URL tuts-codedrops.rhcloud.com. To popularize the site we publish its link in various popular forums like Redit, DZone, Serverside, etc.</description>
    </item>
    
    <item>
      <title>DB Setup - Scoopi Web Scraper - why just scrape when you can scoop</title>
      <link>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/db-setup/</link>
      <pubDate>Sat, 12 Jan 2019 00:46:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/scoopi-web-scraper/manage/db-setup/</guid>
      <description>Setup HSQLDB Database for Scoopi To run examples with persistence we need HSQLDB up and running. Download HSQLDB version 2.3 and extract it to some folder. To create database and start HSQLDB server, run
cd hsqldb-2.3.0/hsqldb java -cp lib/hsqldb.jar org.hsqldb.server.Server --database.0 file:data/scoopi --dbname.0 scoopi  This creates database named scoopi and places database files in data directory.
Use HSQLDB client to connect running database and to do that run following from another console</description>
    </item>
    
    <item>
      <title>Multisite Activation - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/multisite-activation/</link>
      <pubDate>Fri, 11 Jan 2019 12:18:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/multisite-activation/</guid>
      <description>11.3. WordPress Multisite Activation In the previous blog, we installed and configured WordPress Multisite. In this blog, we explain the plugin activation in Multisite Installations.
Multisite Super Admin and Site Admins WordPress Multisite Installation will have a Super Admin (SA) to manage the network and multiple admins to manage the sites in the network.
In multisite, only SA can install (add) and update the plugins and site admins are not allowed to do so.</description>
    </item>
    
    <item>
      <title>RHC Client Tools - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/openshift/rhc-client-tools/</link>
      <pubDate>Fri, 11 Jan 2019 00:53:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/openshift/rhc-client-tools/</guid>
      <description>In this Appendix, we install OpenShift RHC Client Tools, setup RHC and place WordPress Tutorial scripts and sample pages in OpenShift server. OpenShift RHC Client Tools is useful to manage OpenShift applications and to access OpenShift Shell. We have to access OpenShift Shell for a couple of tasks: to backup the site and to place the sample HTML in the server.
OpenShift RHC Client Tools OpenShift Client tools also called as RHC is a command line tool used to create and manage the OpenShift applications.</description>
    </item>
    
    <item>
      <title>RPC - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/rpc/gwt-remote-procedure-calls/</link>
      <pubDate>Thu, 10 Jan 2019 14:09:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/rpc/gwt-remote-procedure-calls/</guid>
      <description>Remote Procedure Calls AutoSuggest, for its SuggestOracle, fetches a list of symbol names from a mock datastore SymbolDatabase. In this section, we move SymbolDatabase to server and fetch list from the server via Remote Procedure Call (RPC).
GWT RPC Tutorial GWT StockWatcher tutorial has a gentle introduction to client-server communication. . If you are new to GWT, then it is a prerequisite to cover the RPC section - Making Remote Procedure Calls of the StockWatcher tutorial.</description>
    </item>
    
    <item>
      <title>Deactivation - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/plugin-deactivation/</link>
      <pubDate>Fri, 11 Jan 2019 12:01:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/plugin-deactivation/</guid>
      <description>11.4. WordPress Plugin Deactivation In the previous blogs, we installed WordPress Multisite and learned to code plugin multisite activation. WordPress Plugin Deactivation follows similar pattern but in Share on Social Plugin it has some minor twists.
Share on Social Plugin uses the same class file class-activator.php for deactivation too. In Sos_Activator::setup() method we register Sos_Activator::deactivate() as the deactivation method using WordPress function register_deactivation_hook().
share-on-social/admin/class-activator.php
class Sos_Activator { public function setup () { register_deactivation_hook( SOS_PLUGIN_FILE, array( $this,&amp;#39;deactivate&amp;#39; ) ); } In the deactivation method, we use WordPress function is_multisite() and parameter $networkwide to call Sos_Activator::deactivate_for_blog() method, which deletes the default basic locker, for site level deactivation either in multisite or in single site installation.</description>
    </item>
    
    <item>
      <title>OpenShift Linux Primer - WordPress Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress/openshift/linux-primer/</link>
      <pubDate>Fri, 11 Jan 2019 01:11:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress/openshift/linux-primer/</guid>
      <description>In this appendix, we start with some of the basic Linux commands so that Windows users feel comfortable working with the OpenShift Linux Shell. After that, we show how to copy files from the PC to OpenShift Linux server using secure copy feature of SSH.
Note
To go through this Appendix, we have to complete the RHC (OpenShift Client Tools) installation. To work from a Windows system, we also require PuTTY.</description>
    </item>
    
    <item>
      <title>RPC - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/rpc/rest-of-rpc/</link>
      <pubDate>Thu, 10 Jan 2019 19:05:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/rpc/rest-of-rpc/</guid>
      <description>7.2. Rest of RPC In the previous section, we have gone through nuts and bolts of RPC. For some, its pattern may still bit fuzzy and to reinforce the concept we leave the rest of datastore calls as an exercise for readers.
Client still has SymbolDatabase calls in following three classes.
  in.fins.client.action/SymbolAction.java
  in.fins.client.action/DataGroupAction.java
  in.fins.client.action/DataAction.java
  Shift them to RPC with following steps.
  define method in ISymbolService interface.</description>
    </item>
    
    <item>
      <title>Uninstall - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/plugin-uninstall/</link>
      <pubDate>Fri, 11 Jan 2019 12:42:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/activation/plugin-uninstall/</guid>
      <description>11.5. WordPress Plugin Uninstall In the previous blogs, we customized activation and deactivation phases for the plugin. In this tutorial, we use uninstall phase to clean up the entities created by the plugin.
When a plugin is uninstalled, it is already in deactivated state and it means that WordPress Action framework is no longer usable with in the plugin code. WordPress do provide a uninstall hook register_uninstall_hook(), but when when a plugin can not be written without running code within the plugin there is another mechanism to handle uninstall.</description>
    </item>
    
    <item>
      <title>Database Setup - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/database/setup-database/</link>
      <pubDate>Thu, 10 Jan 2019 12:28:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/database/setup-database/</guid>
      <description>Setup Database It&amp;rsquo;s time to say goodbye to mock datastore SymbolDatabase.
This section explains the GWT Database setup. Any RDBMS accessible through JDBC should do, and we choose HSQLDB for its configuration simplicity. HSQLDB, a full fledged RDBMS, is easy to setup and requires almost zero configuration. Further, HSQLDB plugin for Eclipse makes the process even more simpler.
Once database is up, we require to load it with data. For that, we are going to use a small java application, RStore.</description>
    </item>
    
    <item>
      <title>Unit Test - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/plugin-unit-testing/</link>
      <pubDate>Fri, 11 Jan 2019 12:56:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/plugin-unit-testing/</guid>
      <description>Plugin Unit Test One of the challenges that we faced while developing the Share on Social Plugin was to setup unit tests. Many tutorials and blogs on the subject and even the official WordPress documentation couldn&amp;rsquo;t help us much to overcome the initial hurdles. Knowing well the difficulties faced by the beginners, some developers have packaged and hosted the testing frameworks for WordPress on GitHub to ease the setup but they are unable to reduce the overall confusion.</description>
    </item>
    
    <item>
      <title>JDO Persistence - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/database/persist/</link>
      <pubDate>Thu, 10 Jan 2019 18:45:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/database/persist/</guid>
      <description>8.2. Persist To load data, we use RStore which has following features,
  enhance java classes for persistence
  create database schema
  delete database schema
  persist and retrieve objects from database
  Prepare RStore project Download RStore.zip from the book site. Create a regular Java project named rstore with default settings. Select the project in Project Explorer and choose File → Import. In Import dialog, expand general and choose Archive File and import RStore.</description>
    </item>
    
    <item>
      <title>Test Setup - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/setup/</link>
      <pubDate>Fri, 11 Jan 2019 13:24:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/setup/</guid>
      <description>12.2. WordPress Test Setup In the previous blog, WordPress PHPUnit Setup we put up all the scaffolding necessary to run WordPress Plugin Tests. In this blog, we test the setup by running some test cases.
Run Test Cases The test cases are placed in plugins&amp;rsquo; tests/phpunit/tests folder. Let&amp;rsquo;s start with a test case to test the constants defined in the wp-simple-plugin.php. Add a test file test-wp-simple-plugin.php to tests/phpunit/tests with following contents.</description>
    </item>
    
    <item>
      <title>JDO – Hibernate - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/database/retrieve/</link>
      <pubDate>Thu, 10 Jan 2019 19:22:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/database/retrieve/</guid>
      <description>8.3. Retrieve In this section, we retrieve persisted symbols through a variety of ORM like JDO, Hibernate and MyBatis. We do so, just to demonstrate that objects persisted through an ORM are readily retrievable through others.
JDO In JDO, we use PersistenceManager to retrieve an object from the database.
PersistenceManager pm = pmf.getPersistenceManager(); try { Symbol symbol = pm.getObjectById(Symbol.class, name); // use the object  } finally { pm.close(); } Sometimes, we may be like to retrieve only a certain fields of an object, and for this, JDO supports JDOQL and SQL query.</description>
    </item>
    
    <item>
      <title>Simple Unit Test - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/simple-unit-tests/</link>
      <pubDate>Fri, 11 Jan 2019 13:07:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/simple-unit-tests/</guid>
      <description>12.3. WordPress Plugin Simple Unit Tests In the previous blog, we setup PHPUnit for WordPress Plugin and verified the setup with a Simple Plugin. The rest of the blog explains various types of unit tests we used to test the Share on Social Plugin.
The real hurdle in testing a plugin is to understand the WordPress architecture and write the appropriate tests for it. For better understanding, we selected various types of methods that are typical to a plugin and explain how to test them.</description>
    </item>
    
    <item>
      <title>DAO - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/database/gwt-dao/</link>
      <pubDate>Thu, 10 Jan 2019 12:11:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/database/gwt-dao/</guid>
      <description>Chapter 9. DAO This chapter explores the design of GWT Dao. Data Access Object (DAO) layer allows the app flip between ORM effortlessly. In the last chapter, we introduced three ORM, and now they help us to verify the design of GWT DAO layer.
DAO design Service layer of the application interacts with the database through DAO layer. To accomodate multiple ORM, DAO layer consists of an Abstract Factory and an Interface to access data.</description>
    </item>
    
    <item>
      <title>Unit Test Scripts Action Filter - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/scripts-actions-filters/</link>
      <pubDate>Fri, 11 Jan 2019 13:30:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/scripts-actions-filters/</guid>
      <description>12.4. Unit Test Scripts, Actions, Filters In the previous blog, we saw how to write tests for plugin methods that returns value or echo output. In this blog, we explore third category of plugin methods where outcome is tested using corresponding WordPress API functions.
For example, add_action() which registers an action hook is tested using WordPress function has_action().
But, before exploring such tests, we briefly explain an utility class used by Share on Social Plugin test cases to reduce boilerplate code in tests and also, learn to toggle user capability to test methods which depends on user capability.</description>
    </item>
    
    <item>
      <title>Advanced Unit Tests - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/advanced-unit-tests/</link>
      <pubDate>Fri, 11 Jan 2019 13:36:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/advanced-unit-tests/</guid>
      <description>12.5. WordPress Advanced Unit Tests In the previous blog we saw tests that uses WordPress API functions to investigate the outcome of a method. However, such WordPress functions which are helpful to write tests are few, and to test majority of plugin methods, we need to rely on WordPress global variables and classes. Many WordPress functions store information in global variables or in classes which is used later to construct the output i.</description>
    </item>
    
    <item>
      <title>Google App Engine - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/google-app-engine/google-app-engine/</link>
      <pubDate>Thu, 10 Jan 2019 12:45:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/google-app-engine/google-app-engine/</guid>
      <description>Google App Engine Google App Engine (GAE), also known as App Engine, enables you to host web applications on Google&amp;rsquo;s infrastructure. GAE is a Platform as a Service (PaaS) cloud computing platform for hosting web applications in Google-managed data centers. App Engine offers automatic scaling for web applications as request increases by allocating more resources for the application to handle the additional demand.
App Engine supports applications written in Java, Python and Go.</description>
    </item>
    
    <item>
      <title>Test Internationalization - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/internationalization-functions/</link>
      <pubDate>Fri, 11 Jan 2019 13:50:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/internationalization-functions/</guid>
      <description># Test Internationalization Functions
Share on Social Plugin uses WordPress Internationalization (i18n) functions extensively and we need an easy method to test the string translations. In this blog, we explain the unit tests of i18n functions.
Setup Language Files for Tests In WordPress Localization, we installed GetText software required for WordPress i18n and l10n, and also generated language files for the plugin.
To test plugin internationalization, we require separate set of language files.</description>
    </item>
    
    <item>
      <title>Ajax Unit Tests - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/ajax/</link>
      <pubDate>Fri, 11 Jan 2019 13:44:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/ajax/</guid>
      <description>12.7. WordPress Plugin Ajax Unit Tests In the previous six blogs, we gone through the unit tests for the WordPress plugin regular methods. In this blog, we explore WordPress Plugin Ajax unit tests.
The normal test cases extend WP_UnitTestCase. For Ajax unit tests, WordPress Test Library comes with a separate class WP_Ajax_UnitTestCase. Moreover, the construction of the test methods are also bit different from the regular ones.
Ajax Test Case Group and Files While normal test cases takes very little time to complete, WordPress Plugin Ajax tests are inherently very slow.</description>
    </item>
    
    <item>
      <title>Deploy on App Engine - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-deploy/</link>
      <pubDate>Thu, 10 Jan 2019 17:26:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-deploy/</guid>
      <description>10.2. Deploy Once app is ready, Google App Engine Deploy is a simple affair with following steps.
  login to http://appspot.com using your Google ID.
  in Google App Engine welcome screen, create an application using Create Application option.
  in project context menu, choose Google → App Engine Settings . In App Engine dialog, enter the Application ID field with Application ID created in previous step. Start with 1 for Version number and increment it whenever there is a major release of the app.</description>
    </item>
    
    <item>
      <title>Multi Site Unit Test - WordPress Plugin Development - CodeTab</title>
      <link>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/multisite-plugin-unit-tests/</link>
      <pubDate>Fri, 11 Jan 2019 14:12:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/wordpress-plugin-development/unit-test/multisite-plugin-unit-tests/</guid>
      <description>12.8. WordPress Multisite Plugin Unit Tests In the previous blogs we covered single site unit tests. In this concluding blog of the series, we explain WordPress Multisite Plugin unit tests.
As explained earlier, WordPress Test Lib creates an in-memory WordPress instance to run unit tests. The test instance is actually a WordPress single site installation and it is not useful to carryout the multisite tests.
In Enable WordPress Multisite, we saw how to go about WordPress Multisite Installation wherein we used wp-config.</description>
    </item>
    
    <item>
      <title>GAE Data Upload - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-manage-data/</link>
      <pubDate>Thu, 10 Jan 2019 13:01:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-manage-data/</guid>
      <description>Manage Data Fins uses DAO Layer and JDO for data access and it is ready to interact with App Engine datastore without any further changes. But as of now, we don&amp;rsquo;t have any data in App Engine datastore. Earlier, we used RStore to load data to HSQLDB, but this is of little use as it is not possible to move this data to App Engine datastore. Let&amp;rsquo;s explore the ways to load data into App Engine datastore.</description>
    </item>
    
    <item>
      <title>GAE Cache - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-cache/</link>
      <pubDate>Thu, 10 Jan 2019 16:38:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-cache/</guid>
      <description>11.2. Cache The next task is to cache the symbols in App Engine MemCache. By moving the symbols from List&amp;lt;Symbol&amp;gt; in UploadService servlet to MemCache, they become accessible to App Engine services like Queue, Tasks etc.
CachePanel This widget has two Buttons - Cache Symbols and Clear cache, with obvious functionality.
 Figure 11.3. CachePanel Its design is similar to the UploadPanel described in the previous section, and it uses FormPanel to submit data to the server and invokes UploadService servlet, through regular HTML form submission rather than GWT RPC.</description>
    </item>
    
    <item>
      <title>Task Queue - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-task-queue/</link>
      <pubDate>Thu, 10 Jan 2019 19:33:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-task-queue/</guid>
      <description>11.3. Task Queue Once we have Symbols in the cache, all that it takes to persist is to retrieve them, one by one, from the cache and persist with a call to JDO. This simple task seems to be achievable through RPC, but it will not work as intended on App Engine. Let&amp;rsquo;s understand the limitations imposed by the App Engine.
RPC has to be completed within 60 seconds, and when there are few symbols, call may finish within the deadline.</description>
    </item>
    
    <item>
      <title>GAE Backends - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-backends/</link>
      <pubDate>Thu, 10 Jan 2019 16:02:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-backends/</guid>
      <description>11.4. Backends So far, App Engine handled file upload, cache ops and task execution through a default frontend instance. This instance has 60 seconds deadline for HTTP requests and 10 minutes deadline for tasks and a low memory cap of 128MB.
App Engine Backends allows us to configure additional instances to overcome these limits. App Engine Backends are special instances that have no request deadlines and comes with higher memory and CPU limits, and provides persistent state across requests.</description>
    </item>
    
    <item>
      <title>OpenShift Setup - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/openshift/openshift/</link>
      <pubDate>Thu, 10 Jan 2019 13:47:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/openshift/openshift/</guid>
      <description>OpenShift OpenShift is a cloud computing platform as a service (PaaS) product from Red Hat. Unlike App Engine which restricts it self to select set of languages and databases, OpenShift gives you a wide range of choice programming languages including Java, Ruby, PHP, Node.js, Python and Perl. It supports variety of databases like MySQL, MangoDB, PostgreSQL etc.,
OpenShift also comes with a free account which allows you to host three applications.</description>
    </item>
    
    <item>
      <title>OpenShift - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/openshift/prepare-openshift-project/</link>
      <pubDate>Thu, 10 Jan 2019 18:55:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/openshift/prepare-openshift-project/</guid>
      <description>12.2. GWT OpenShift Project Project fins developed so far is configured for App Engine and there are two options to deploy its code on OpenShift.
  create a new project and import the code.
  modify the existing project.
  As we are exploring the functionalities of OpenShift with a demo application, we suggest you to go with a new project. For a live project, we suggest the second one.</description>
    </item>
    
    <item>
      <title>OpenShift Configure - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/openshift/openshift-configure/</link>
      <pubDate>Thu, 10 Jan 2019 17:20:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/openshift/openshift-configure/</guid>
      <description>12.3. OpenShift Configure This section explains the changes required in application configuration and code to run Fins on OpenShift.
JDO config for MySQL In JDO configuration file META-INF/jdoconfig.xml, we have to add a new persistence-manager-factory for MySQL.
Configuration requires connection URL, User Name and Password and we obtain them through
$ rhc app ssh demo &amp;gt; env | grep -i mysql OPENSHIFT_MYSQL_DB_PORT=60311 OPENSHIFT_MYSQL_DB_HOST=51fb####-finsdemo.rhcloud.com OPENSHIFT_MYSQL_DB_PASSWORD=w1pd#### OPENSHIFT_MYSQL_DB_USERNAME=admin#### Use the values for configuration in jdoconfig.</description>
    </item>
    
    <item>
      <title>Deploy on OpenShift - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/openshift/openshift-build-deploy/</link>
      <pubDate>Thu, 10 Jan 2019 16:20:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/openshift/openshift-build-deploy/</guid>
      <description>12.4. OpenShift Deployment Even though, we developed a fairly complicated GWT application and deployed it to App Engine, surprisingly we never discussed about build cycle. Google Plugin for Eclipse (GPE) was building the application in background. But, when it comes to OpenShift, we have to build and deploy.
Steps to build a GWT application with JDO are
  compile the java classes with javac.
  enhance persistence classes with JDO Enhancer.</description>
    </item>
    
    <item>
      <title>OpenShift Development - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/openshift/openshift-development/</link>
      <pubDate>Thu, 10 Jan 2019 17:41:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/openshift/openshift-development/</guid>
      <description>12.5. OpenShift Development Without any changes to the code, we are able to deploy Fins to OpenShift. But, you may require a local setup to develop your app before moving it to OpenShift, and this section shows how to develop GWT applications with Tomcat.
Setup Tomcat Extract Tomcat archive to some location on your system and we refer this folder as CATALINA_HOME.
Officially suggested method to run GWT on external server is to copy static, image files and gwt dir to tomcat/webapps and on any changes in server side classes (like rcp etc.</description>
    </item>
    
    <item>
      <title>OpenShift V3 - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/openshift/openshift-online-v3-deployment/</link>
      <pubDate>Fri, 11 Jan 2019 18:33:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/openshift/openshift-online-v3-deployment/</guid>
      <description>12.6. OpenShift Online V3 Deployment The earlier chapters explained configuration and deployment of GWT applications on OpenShift V2 using RHC command line tool. OpenShift V2 is discontinued from October 2017 and replaced with OpenShift V3 which is no longer free for production applications. However, for development there is free starters account with limited resources. This tutorial, OpenShift Online V3 Deployment, explains the configuration and deployment process to host the GWT application on OpenShift V3.</description>
    </item>
    
    <item>
      <title>Apache Ivy - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/build/apache-ivy/</link>
      <pubDate>Thu, 10 Jan 2019 10:47:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/build/apache-ivy/</guid>
      <description>IvyDE is Apache Ivy plugin for Eclipse and using IvyDE plugin, with just two steps you will be able to migrate your projects to auto dependency management.
Install IvyDE In Eclipse select Help → Install New Software. Add IvyDE update site http://www.apache.org/dist/ant/ivyde/updatesite/. Following softwares are available for installation.
  Apache Ivy library
  Apache IvyDE Eclipse plugin
  Select both and complete the installation. On Eclipse restart, menu bar will have IvyDE&amp;rsquo;s Resove button.</description>
    </item>
    
    <item>
      <title>Project Code - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/gwt-project-code/</link>
      <pubDate>Thu, 10 Jan 2019 20:33:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/gwt-project-code/</guid>
      <description>GWT Project Code The code for complete project covered in this tutorial can be downloaded from GitHub
Source code of the GWT project is archived into part-1.zip, part-2.zip etc., corresponding to parts of the book. Each archive contains Chapter or Section wise code. Instead of sifting through a fully developed project, chapter/section wise code helps one to understand the source without much effort. Download section also contains a standalone java application, RStore, which is used to load the data to database in Part 2 of the book.</description>
    </item>
    
    <item>
      <title>Demo - GWT Tutorial - CodeTab</title>
      <link>https://www.codetab.org/tutorial/gwt/gwt-demo/</link>
      <pubDate>Thu, 10 Jan 2019 20:25:00 +0530</pubDate>
      
      <guid>https://www.codetab.org/tutorial/gwt/gwt-demo/</guid>
      <description>Welcome to the Fins demo !
 GWT Tutorial Demo showcases Fins, the application developed in the tutorial, hosted on Google App Engine Google App Engine</description>
    </item>
    
  </channel>
</rss>