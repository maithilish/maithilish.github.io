<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Codetab</title><link>https://www.codetab.org/post/</link><description>Recent content in Posts on Codetab</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Aug 2019 12:11:22 +0530</lastBuildDate><atom:link href="https://www.codetab.org/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Borg Backup</title><link>https://www.codetab.org/post/borg-backup/</link><pubDate>Tue, 27 Aug 2019 10:00:00 +0000</pubDate><guid>https://www.codetab.org/post/borg-backup/</guid><description>For long, I was looking for an ideal backup setup. Expectations were minimal,
periodically backup a set of folders from the main disk to fallback disk. compress backup to save space. retain the earlier backup sets. easy to learn, deploy and maintain. I tried and dropped many backup solutions because of cumbersome setup and steep learning curve. Finally, I chose Borg Backup and using it for more than a year now; happy with its ease of use and trouble free backups.</description></item><item><title>Automate Borg Backup</title><link>https://www.codetab.org/post/borg-backup-automate/</link><pubDate>Tue, 27 Aug 2019 11:00:00 +0000</pubDate><guid>https://www.codetab.org/post/borg-backup-automate/</guid><description>The previous post, Borg Backup, explained installation and basics of Borg, and this post introduces Pybs, a simple python script to automate backups in Linux systems. To automate the backups, Pybs uses Python, YAML, Borg and Systemd. For non-linux platforms use some other task scheduler in place of Systemd.
Installation Download Pybs from Github and extract it in your home dir.
Pybs, by default, uses Borg repository at $HOME/backup/borgrepo located in user home directory.</description></item><item><title>Fun with Unicode in Java</title><link>https://www.codetab.org/post/java-unicode-basics/</link><pubDate>Sun, 29 Sep 2019 11:00:00 +0000</pubDate><guid>https://www.codetab.org/post/java-unicode-basics/</guid><description>Fun with Unicode in Java Normally we don&amp;rsquo;t pay much attention to character encoding in Java. However, when we crisscross byte and char streams, things can get confusing unless we know the charset basics. Many tutorials and posts about character encoding are heavy in theory with little real examples. In this post, we try to demystify Unicode with easy to grasp examples.
Encode and Decode Before diving into Unicode, first let&amp;rsquo;s understand terms - encode and decode.</description></item><item><title>Hugo Webfont</title><link>https://www.codetab.org/post/hugo-webfont/</link><pubDate>Sat, 05 Oct 2019 10:20:00 +0000</pubDate><guid>https://www.codetab.org/post/hugo-webfont/</guid><description>Hugo Webfont The share icons rendered above are not images, instead they are font icons. Font icons, also called webfont, are scalable vector icons that can be styled with css; the size, color, shadow, etc.
Font Awesome is the top choice for font icons, with more than 650 icons with minimum download size of 130KB. In case we use few icons, better option is to pick and choose icons and create a custom pack; codetab.</description></item><item><title>Kubernetes Cluster on Fedora CoreOS</title><link>https://www.codetab.org/post/kubernetes-cluster-virtualbox/</link><pubDate>Tue, 15 Sep 2020 11:15:00 +0000</pubDate><guid>https://www.codetab.org/post/kubernetes-cluster-virtualbox/</guid><description>K8s Cluster on Fedora CoreOS VM After dabbling with Kubernetes on Minikube, I moved on to setup a three node cluster with VirtualBox and Ubuntu. It was not that difficult as some blogs and books on K8s claims but found that Ubuntu K8s cluster has its own share of drawbacks. It&amp;rsquo;s time and space: Ubuntu Server installation takes an hour and needs about 20GB of disk space for a three node cluster.</description></item><item><title>Contributing to Eclipse</title><link>https://www.codetab.org/post/contributing-to-eclipse/</link><pubDate>Fri, 24 Nov 2023 11:30:00 +0000</pubDate><guid>https://www.codetab.org/post/contributing-to-eclipse/</guid><description>Contributing to Eclipse: Principles, Patterns, and Plug-Ins by Kent Beck and Erich Gamma is a beautifully crafted book on Eclipse Plugin Development which came out in 2003. Somewhere around 2010 I bought the book; by that time, the example code used in the book for the Eclipse 2 platform was already outdated. How much ever I tried, I could not fix and run the code in Eclipse Platform 3. Without the running plugin, soon I gave up and put away the book.</description></item><item><title>Linux Data Recovery</title><link>https://www.codetab.org/post/linux-data-recovery/</link><pubDate>Fri, 11 Oct 2024 11:30:00 +0000</pubDate><guid>https://www.codetab.org/post/linux-data-recovery/</guid><description>Table of Contents Data Recovery Practice Setup Create Test Disk in CLI Disk Images Create Recovery Image Mount Recovery Image Clone the Failing Disk Recover GPT Backup and Restore GPT How to corrupt GPT Recover the corrupted GPT Recover Lost Partition Recover LVM LVM Metadata Recover from missing PV Recover from missing LVM text metadata Recover from LV and VG errors Recover Ext4 View Superblock and Backups Overwrite Superblock and Recover Recover Deleted Files Recover Txt Files Mount with ext4 offset Ext4 FS without GPT Data Recovery Data recovery may broadly divided into two categories - the failing disk or wrong disk management command is executed by mistake.</description></item><item><title>Broken Links Checker</title><link>https://www.codetab.org/post/broken-links-checker/</link><pubDate>Wed, 24 Mar 2021 10:20:00 +0000</pubDate><guid>https://www.codetab.org/post/broken-links-checker/</guid><description>Broken Link Checker We use a python script and wget to check broken links in this site.
Log Broken Links The python script scrapes links from specified folders, checks the links and logs the broken links to /tmp/brokenlinks.log.
&amp;nbsp; &amp;nbsp; brokenlinks.py
import glob import bs4 import urllib.request import os.path def checkLinks(links): brokenCount = 0 log = open(&amp;#34;/tmp/brokenlinks.log&amp;#34;, &amp;#34;w&amp;#34;) for link in links: message = &amp;#34;&amp;#34; try: status_code = urllib.request.urlopen(link).getcode() if(status_code !</description></item><item><title>Kubernetes Cluster on Fedora CoreOS with Qemu</title><link>https://www.codetab.org/post/kubernetes-cluster-qemu/</link><pubDate>Tue, 15 Sep 2020 11:30:00 +0000</pubDate><guid>https://www.codetab.org/post/kubernetes-cluster-qemu/</guid><description>K8s Cluster on Fedora CoreOS VM After dabbling with Kubernetes on Minikube, I moved on to setup a three node cluster with VirtualBox and Ubuntu. It was not that difficult as some blogs and books on K8s claims but found that Ubuntu K8s cluster has its own share of drawbacks. It&amp;rsquo;s time and space: Ubuntu Server installation takes an hour and needs about 20GB of disk space for a three node cluster.</description></item></channel></rss>