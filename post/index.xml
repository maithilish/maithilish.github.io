<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Codetab</title>
    <link>https://www.codetab.org/post/</link>
    <description>Recent content in Posts on Codetab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Aug 2019 12:11:22 +0530</lastBuildDate>
    
	<atom:link href="https://www.codetab.org/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Borg Backup</title>
      <link>https://www.codetab.org/post/borg-backup/</link>
      <pubDate>Tue, 27 Aug 2019 10:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/borg-backup/</guid>
      <description>For long, I was looking for an ideal backup setup. Expectations were minimal;periodically backup set of folders from the main disk to secondary disk, compressing the files to save disk space, retaining the earlier sets and easy to learn, deploy and maintain. I tried and dropped many backup solutions because of cumbersome setup and steep learning curve.
Finally, I chose Borg Backup for its sophistication and ease of use; thereupon, using it for more than a year now.</description>
    </item>
    
    <item>
      <title>Automate Borg Backup</title>
      <link>https://www.codetab.org/post/borg-backup-automate/</link>
      <pubDate>Tue, 27 Aug 2019 11:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/borg-backup-automate/</guid>
      <description>The previous post, Borg Backup, explained installation and basics of Borg, and this post introduces Pybs, a simple python script to automate backups in Linux systems. To automate the backups, Pybs uses Python, YAML, Borg and Systemd. For non-linux platforms use some other task scheduler in place of Systemd.
Installation Download Pybs from Github and extract it in your home dir.
Pybs, by default, uses Borg repository at $HOME/backup/borgrepo located in user home directory, and for sake of explanation, we stick with it.</description>
    </item>
    
    <item>
      <title>Fun with Unicode in Java</title>
      <link>https://www.codetab.org/post/java-unicode-basics/</link>
      <pubDate>Sun, 29 Sep 2019 11:00:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/java-unicode-basics/</guid>
      <description>Fun with Unicode in Java Normally we don&amp;rsquo;t pay much attention to character encoding in Java. However, when we crisscross byte and char streams, things can get confusing unless we know the charset basics. Many tutorials and posts about character encoding are heavy in theory with little real examples. In this post, we try to demystify Unicode with easy to grasp examples.
Encode and Decode Before diving into Unicode, first let&amp;rsquo;s understand terms - encode and decode.</description>
    </item>
    
    <item>
      <title>Hugo Webfont</title>
      <link>https://www.codetab.org/post/hugo-webfont/</link>
      <pubDate>Sat, 05 Oct 2019 10:20:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/hugo-webfont/</guid>
      <description>Hugo Webfont The share icons rendered above are not images, instead they are font icons. Font icons, also called webfont, are scalable vector icons that can be styled with css; the size, color, shadow, etc.
Font Awesome is the top choice for font icons, with more than 650 icons with minimum download size of 130KB. In case we use few icons, better option is to pick and choose icons and create a custom pack; codetab.</description>
    </item>
    
    <item>
      <title>Kubernetes Cluster on Fedora CoreOS</title>
      <link>https://www.codetab.org/post/kubernetes-cluster-virtualbox/</link>
      <pubDate>Mon, 14 Sep 2020 11:15:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/kubernetes-cluster-virtualbox/</guid>
      <description>K8s Cluster on Fedora CoreOS VM After dabbling with Kubernetes on Minikube, I moved on to setup a three node cluster with VirtualBox and Ubuntu. It was not that difficult as some blogs and books on K8s claims but found that Ubuntu K8s cluster has its own share of drawbacks. It&amp;rsquo;s time and space: Ubuntu Server installation takes an hour and needs about 20GB of disk space for a three node cluster.</description>
    </item>
    
    <item>
      <title>Kubernetes Cluster on Fedora CoreOS with Qemu</title>
      <link>https://www.codetab.org/post/kubernetes-cluster-qemu/</link>
      <pubDate>Sat, 12 Sep 2020 11:15:00 +0000</pubDate>
      
      <guid>https://www.codetab.org/post/kubernetes-cluster-qemu/</guid>
      <description>K8s Cluster on Fedora CoreOS Qemu After dabbling with Kubernetes on Minikube, I moved on to setup a three node cluster with VirtualBox and Ubuntu. It was not that difficult as some blogs and books on K8s claims, but found that Ubuntu K8s cluster has its own share of drawbacks. It&amp;rsquo;s time and space: Ubuntu Server VM installation takes an hour and needs about 20GB of disk space for a three node cluster.</description>
    </item>
    
  </channel>
</rss>