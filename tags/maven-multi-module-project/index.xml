<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven Multi Module Project on Codetab</title>
    <link>http://www.codetab.org/tags/maven-multi-module-project/</link>
    <description>Recent content in Maven Multi Module Project on Codetab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Jan 2019 17:45:00 +0530</lastBuildDate>
    
	<atom:link href="http://www.codetab.org/tags/maven-multi-module-project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Multi Module Project - Apache Maven Tutorial â€“ CodeTab</title>
      <link>http://www.codetab.org/tutorial/apache-maven/multi-module/multi-module-project/</link>
      <pubDate>Fri, 11 Jan 2019 17:45:00 +0530</pubDate>
      
      <guid>http://www.codetab.org/tutorial/apache-maven/multi-module/multi-module-project/</guid>
      <description>Maven Multi Module As project size and complexity increases, it makes sense to split the project into multiple modules. While it is always possible to split the project into multiple projects and link them as dependencies, it complicates the build process. In Maven, the preferred approach is to structure the project as multi module project and delegate the rest to Maven.
In this tutorial, we go through a simple multi module project.</description>
    </item>
    
  </channel>
</rss>