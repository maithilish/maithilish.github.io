<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>App Engine Cache on Codetab</title><link>https://www.codetab.org/tags/app-engine-cache/</link><description>Recent content in App Engine Cache on Codetab</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 10 Jan 2019 16:38:00 +0530</lastBuildDate><atom:link href="https://www.codetab.org/tags/app-engine-cache/index.xml" rel="self" type="application/rss+xml"/><item><title>GAE Cache - GWT Tutorial - CodeTab</title><link>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-cache/</link><pubDate>Thu, 10 Jan 2019 16:38:00 +0530</pubDate><guid>https://www.codetab.org/tutorial/gwt/google-app-engine/app-engine-cache/</guid><description>11.2. Cache The next task is to cache the symbols in App Engine MemCache. By moving the symbols from List&amp;lt;Symbol&amp;gt; in UploadService servlet to MemCache, they become accessible to App Engine services like Queue, Tasks etc.
CachePanel This widget has two Buttons - Cache Symbols and Clear cache, with obvious functionality.
Figure 11.3. CachePanel Its design is similar to the UploadPanel described in the previous section, and it uses FormPanel to submit data to the server and invokes UploadService servlet, through regular HTML form submission rather than GWT RPC.</description></item></channel></rss>