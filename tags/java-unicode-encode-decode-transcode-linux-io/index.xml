<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java unicode encode decode transcode linux io on Codetab</title><link>https://www.codetab.org/tags/java-unicode-encode-decode-transcode-linux-io/</link><description>Recent content in java unicode encode decode transcode linux io on Codetab</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 29 Sep 2019 11:00:00 +0000</lastBuildDate><atom:link href="https://www.codetab.org/tags/java-unicode-encode-decode-transcode-linux-io/index.xml" rel="self" type="application/rss+xml"/><item><title>Java IO Classes and Charsets</title><link>https://www.codetab.org/post/java-io-charset/</link><pubDate>Sun, 29 Sep 2019 11:00:00 +0000</pubDate><guid>https://www.codetab.org/post/java-io-charset/</guid><description>Java IO Unicode In the previous post, we covered unicode basics. This post explains charset handling while working with Java IO classes.
Char IO Use char stream IO classes Reader and Writer while dealing with text and text files. As already explained, the default charset of Java platform is UTF-8 and text written using Writer class is encoded in UTF-8 and Reader class reads the text in UTF-8.
Using java.io package, we can write and read a text file in default charset as below.</description></item></channel></rss>