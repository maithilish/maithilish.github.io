<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maven Lifecycle Phases Goals on Codetab</title><link>https://www.codetab.org/tags/maven-lifecycle-phases-goals/</link><description>Recent content in Maven Lifecycle Phases Goals on Codetab</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 11 Jan 2019 16:21:00 +0530</lastBuildDate><atom:link href="https://www.codetab.org/tags/maven-lifecycle-phases-goals/index.xml" rel="self" type="application/rss+xml"/><item><title>Lifecycle Phases Goals - Apache Maven Tutorial â€“ CodeTab</title><link>https://www.codetab.org/tutorial/apache-maven/maven-lifecycle-goals/</link><pubDate>Fri, 11 Jan 2019 16:21:00 +0530</pubDate><guid>https://www.codetab.org/tutorial/apache-maven/maven-lifecycle-goals/</guid><description>Maven Lifecycle Phases and Goals The previous chapter explained the concepts of Maven Lifecycle and Phases. Now, let&amp;rsquo;s understand the link between phases and Plugin Goals.
Phases and Plugin Goals Lifecycle phases don&amp;rsquo;t come with any functionality; to carry out a task they rely on plugins. For example, the compile phase doesn&amp;rsquo;t actually compile the Java source, instead it delegated the job to compile goal of maven-compiler-plugin which invokes the rusty old javac to compile the project.</description></item></channel></rss>