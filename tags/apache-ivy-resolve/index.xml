<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache Ivy Resolve on Codetab</title>
    <link>http://www.codetab.org/tags/apache-ivy-resolve/</link>
    <description>Recent content in Apache Ivy Resolve on Codetab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Jan 2019 22:06:00 +0530</lastBuildDate>
    
	<atom:link href="http://www.codetab.org/tags/apache-ivy-resolve/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Resolve - Apache Ivy Tutorial - CodeTab</title>
      <link>http://www.codetab.org/tutorial/apache-ivy/resolve/</link>
      <pubDate>Thu, 10 Jan 2019 22:06:00 +0530</pubDate>
      
      <guid>http://www.codetab.org/tutorial/apache-ivy/resolve/</guid>
      <description>Resolve task, resolve dependencies described in ivy.xml and places the resolved dependencies in the Apache Ivy cache.
Let&amp;rsquo;s go through a sample project to understand this important concept. First, create a directory tree for package in.ex.ivy in the work dir
mkdir -p src/in/ex/ivy Add following class file to src/in/ex/ivy.
Example.java
package in.ex.ivy; import org.apache.commons.lang.StringUtils; public class Example { public static void main(String[] args) { String string = StringUtils.upperCase(&amp;#34;Ivy Beginner Guide&amp;#34;); System.</description>
    </item>
    
  </channel>
</rss>