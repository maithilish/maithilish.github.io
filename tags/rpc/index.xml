<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rpc on Codetab</title><link>https://www.codetab.org/tags/rpc/</link><description>Recent content in Rpc on Codetab</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 10 Jan 2019 19:05:00 +0530</lastBuildDate><atom:link href="https://www.codetab.org/tags/rpc/index.xml" rel="self" type="application/rss+xml"/><item><title>RPC - GWT Tutorial - CodeTab</title><link>https://www.codetab.org/tutorial/gwt/rpc/rest-of-rpc/</link><pubDate>Thu, 10 Jan 2019 19:05:00 +0530</pubDate><guid>https://www.codetab.org/tutorial/gwt/rpc/rest-of-rpc/</guid><description>7.2.Â Rest of RPC In the previous section, we have gone through nuts and bolts of RPC. For some, its pattern may still bit fuzzy and to reinforce the concept we leave the rest of datastore calls as an exercise for readers.
Client still has SymbolDatabase calls in following three classes.
in.fins.client.action/SymbolAction.java
in.fins.client.action/DataGroupAction.java
in.fins.client.action/DataAction.java
Shift them to RPC with following steps.
define method in ISymbolService interface. Use method names - getSymbol(), getDataGroup() and getData() with proper parameters and return type.</description></item></channel></rss>