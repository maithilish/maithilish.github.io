<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gwt Dao on Codetab</title>
    <link>http://www.codetab.org/tags/gwt-dao/</link>
    <description>Recent content in Gwt Dao on Codetab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Jan 2019 12:11:00 +0530</lastBuildDate>
    
	<atom:link href="http://www.codetab.org/tags/gwt-dao/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DAO - GWT Tutorial - CodeTab</title>
      <link>http://www.codetab.org/tutorial/gwt/database/gwt-dao/</link>
      <pubDate>Thu, 10 Jan 2019 12:11:00 +0530</pubDate>
      
      <guid>http://www.codetab.org/tutorial/gwt/database/gwt-dao/</guid>
      <description>Chapter 9. DAO This chapter explores the design of GWT Dao. Data Access Object (DAO) layer allows the app flip between ORM effortlessly. In the last chapter, we introduced three ORM, and now they help us to verify the design of GWT DAO layer.
DAO design Service layer of the application interacts with the database through DAO layer. To accomodate multiple ORM, DAO layer consists of an Abstract Factory and an Interface to access data.</description>
    </item>
    
  </channel>
</rss>